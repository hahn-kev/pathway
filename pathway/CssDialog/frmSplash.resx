<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="tSplash.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="panel1.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="label5.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="lblCompany.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="lblGPL.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="label3.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="label2.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="lblVersionwithDate.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="label1.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="lblSilPathway.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="pictureBox1.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABMLAAATCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABrLQAAkz4AEeBhAFrrZgWy6mgFpZM8AAIAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAEEcAACLOQEM1lwBVO5nA6f0gSrx/rN7//7l0v/+qGn84mEALwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAHs1AQjPWQFL62UCnvJ6I+39rnX//uDJ///9+////////v////7a
        wP/0aQKBiToDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAApkcABctXAULsZAGY8Xgf5vyoav/+3MT//vz6//7////+////////////
        ///+/////vv4//h/JdeANgEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACPPgADwVMAOuNhAZDwchjh+qNi/v3VuP/++vb//v///////////////v7+//7+
        /v/+/f3/9OTX//bq3//+/////q5z/d9iADYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAMRUAAHIVgAv3l8BietuFdn4nVr+/NGx//759f/+/////v////7//v///v3///38///9
        /P/26Nz/4LCL/8p0Nf/BXxf/5r+i//7////+38n/8mgDjGIpAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAALBLAAHUWwFt6WsP1PWWUvz7y6n//fbw/6bTr/+93sT//v7+//79/P///Pr///v4//jq
        3//jtZP/zHk7/8FdFP/Si1b/6cWr//v28f/+/v3//v/+//78+//4gy7bpkcBBQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA2l4AA+tyGOz98ef//v////7////9/v3/J5Mz/zWlP/+AvYn/9ezf/+S5
        mP/PgEX/wVwS/9CES//nv6L/+vLr//79/P/+/fv/9ufb//Xl2P/+/v3///////2xev7lYwE/AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAANi4uAU06OxNWR0hAxF0W1vrdx////////vv3//748P8xmjv/l/2Y/1q+
        YP85eRn/uXk2/+S4l//57eL///z4//78+f/46+H/4rSR/8x6Pf/BXRX/4bGN//79/P/+/////uTQ//Nq
        BI+DNwAAAAAAAAAAAAAAAAAAQDQ0AlVISD1yZmafnpSV8sO9vv/etZj/9KZu//7////i7uD/mrB5/ySR
        Kv91/3f/hP+G/4zZjv8ulTz/u9u9//ns4f/lupn/zX5B/8BcE//QhEz/58Cj//ry6//+/fv///z6//7/
        /v/+/fv/+IYy4rJLAAgAAAAAAAAAAEI4OAVjVFWLppqb+urm5v/7+vr/+Pj4/+/p5v/XgjX/YLJt/0Or
        Tv+S05f/xO3G/2T+Z/9Z/1z/fP99/7fvuP88mkX/Y28X/8t+Qf/kuZf/+e7l///8+P/++/j/8+DQ//bm
        2f///Pn///78/////v/9t4T+6GMARAAAAAAAAAAAWkxNZqOSkv/c0tL/8u7v//v6+v/6+vr/0ODS/y6d
        Nv+L4o//sv+1/4n/jv9v/3P/T/9T/1T/WP9Y/lz/bv9x/8z7zP9hrWn/nMyh//769f/15NX/36uE/8ly
        Mf/CYRn/576g//779///+/n///7+//7n1v/waQWcijkAAAAAAABpWVjMuKWl/9zS0v/u6en/6eHh/8bJ
        wP8woT//h/CL/2T/a/8//kX/RP9K/0z/Uv9L/lD/T/9T/1P+V/9m/2n/cuBz/ymKLf+xm2T/y3Y3/8Fe
        FP/TjFb/6sar//z07P/++vb//vr1//779v/+/v3//v37//eKO+i4SgELAAAAAGtZWdK5paT/z8DA/8i1
        tv/Crq7/NJZA/2HmZ/9I/1D/Pv9G/1r6X/9O3FX/SM9P/1//ZP9K/0//af5s/03IU/8kehb/o2ES/9GF
        TP/owKH/+/Dl//758//++fP//vr0//rv5v/ov6H/0YVN//Pg0P///fz/+7qL/udhAUsAAAAAa1pa0ryn
        p/+1n57/r5iY/4+Vgv8huC//UP9Y/0P+TP8810X/JaEy/4TCkP8ooDb/Yv9n/2b4av8rrzX/UJhK/927
        l//5693//vjw//737//++PH/+/Hm/+rEp//SilP/wV0T/8t4Of/iso3/+u7j///9+//+6tz/8GoIoJRA
        AQBxYWLSpIqK/6WMjP/Lvb3/Za1v/0HpSv88/kX/KMU1/2mfW//im1///v7+/yyjOf9j7Gf/GZ8o/4m/
        if/89Oj//vXq///27P/v7+z/+OjZ/9WPW//CXxb/yXIx/+Crgv/249L//vjw///37//+9+7///v3//77
        +P/2jUHrv1EADmVVVdGii4v/18zM/+/t7P8hqjH/Rv1O/yrVNv+DvIz/5uDg/+F7M//89vH/NaNH/yGb
        MP+51K///vPl//Hv5/+52+7/c7zv/zic6v/X3uD/36qA//Tdyf/+9+7//vfu//vv4v/pw6T/5biV///2
        7f/++PL//vr1//q9kP7pYwBRXU5OyrekpP/c0tL/0t/T/xS7JP8690L/OqRI/93V1P/Vysr/1Yta//TL
        rf/v9/D/8PDi/8XY4/92u+v/SK3z/0Cr9P86ou//L5fo/5HB5v/+9er//PHk/+vHqf/Vj1r/wl4U/8py
        Mf/ktZD//vXq///27P/+9+///d3B/+poCaZoWFfQuaWl/9nOz/+qwKj/FM0j/xXKI/+Tp4z/xrSz/8Ox
        sf/Dnoz/5ZNX///+/f//+/b/m8Th/zGZ6f82n+z/N5/t/zKa6f8pkeT/Q5jf//Lawv/CYRn/yG0q/96l
        ef/028T//vTp//7y5v/+1r///qp8//6VTf/8q2j/42IEpGhXV9C6paX/xLGw/4KcfP8P2B3/GaMo/7Wh
        oP+4pKT/uKSk/7aiov/UcCr//PTt///9+//h4+H/Ko/i/yuS5f8qk+X/J4/j/yGI3/8af9n/z9fc//PX
        vv/+8uX///Ll//7y5f//8+f//o1c//5YDv/+ciT//pxO//GJOvnIVgArbFxc0Lafn/+oj47/aItk/wPU
        Ev9hr23/6+Tk/+7o6f/r5eb/4tzc/9iYbP/ww6L///z5//706f9QnNv/IIbd/yCH3v8dhNz/GH7Y/xJ2
        0/97q9f//vHh///x4v/+8eL///Hi///x4v/+s47//mQX//6DMv/6qmb/4GEEp4o7AAFqWlvRm4CA/7yp
        qv+Ou5X/AbIU/7LYuv/6+Pj/9fHy/+7p6v/m4OD/28Gy/+CMT////Pj//vjx/5i61/8UedX/FXnW/xN3
        1P8Pc9L/CWzO/zaAzf/+8N///+/f///v3///8N///+/f//7l0P/+din//plK/++GNfu4UAAwAAAAAFxN
        TM2vm5v/3NLS/+nq5/+32r7//P38//r5+f/18PH/7ujp/+Xe3v/b1NT/0nQy//vt4f/++vP/4+DZ/xBv
        zv8KbM7/FXLO/1mV0P+vw9X/8eja//7u2///7tz//+7c///u3f//7tz//u7c//6kZf/5qWP/2V4DqlAk
        AAEAAAAAYVJSzLilpf/b0tL/7+vr/+3m5v/g1tX/18nJ/9TFxv/Vxsf/08bG/9DCwv/NkGj/7LuW//74
        8P/+8eH/e6PM/6a7z//u49X//uvW//7r1//+7Nf//+zZ//7t2v//7tr//+3Z///s1v/+69P//tGm/+yH
        OPu2TwAwAAAAAAAAAABlVFTOuKWl/9DBwv/QwMD/2s7O/+ff3//v6uv/8+/v//Pu7//v7Oz/6+fn/+HP
        w//Zg0T///bt///z5v/+6M///+jQ//7p0f//6dP//+vW//7s2P/+7dn//uzW//7r0//+6ND/+dOv/++k
        af/hdyfu0VoBh1clAQEAAAAAAAAAAGZVVc7ArKz/2czN/+bg4P/m4OD/29DR/9PGxv/Pv8D/zby8/8y7
        u//Kurr/xre4/8lvMf/55ND///Lk///o0P/+6ND//uvV///s2P/+7Nf//uvU//7q0f/51rP/7ahx/955
        LPLOWgSsxlYBVKRGAA9oLQEAAAAAAAAAAAAAAAAAbmBhztbIyP/c0dH/1svL/8a0tP/Itrb/ybe4/8q4
        uP/KuLn/yrm6/8q5uv/Ht7j/xYtn/+avhP/+793//+3Z///s1///69T//unR//rauf/rrHf/23sy9Mta
        BrHFVQFcoEUBEnAxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABxZGXNzcDB/83Awf+3o6P/w6+u/8i1
        tf/ItLb/yLa3/8m3uP/KuLn/yrm6/8i4uf/Fq6P/0Xo5//7r1f/+6tL/+dy9/+iuff/Yfzv/uFsY97pS
        A2OsSgAXdDIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAF1PUIy1pKX/wK+v/7ek
        pP+njo7/wq2t/8ezs//ItLT/yba3/8q4uf/Kubr/yrm6/8e5uv/CbjP/46h3/9N/P//AZyj/tnlT/6iN
        gv9lWFmwOjEzAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQzg4F2dY
        Wcyjj5D/s56d/6+amf+tmZj/vKmq/8e3t//MvLz/zr++/8+/v//Nv77/yLm5/7qZiv+zeFX/rIl9/6qW
        lv+gjo7/cGFh4k1AQCs/MjIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAQTEyClFERIFyYmLdjXh4/5+Ih/+ljY3/qpSU/7Kenv+5qKj/uKen/7Genv+qlJT/pY2N/6KJ
        if+Tfn3/emdo9F9QUZlPQkMVLikqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAODExAD42NglGOztRU0ZGiV9PUMhpWFjkbVtb/3FeXv9yX1//b11d/2xa
        WutlVVTMWkxMnU9ERF5JPj4VNCorAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///8H///4B///wAf//gAD//AAA/+AAAP+AAAB/gAAAfgAAAHgAAAAwAA
        AAMAAAADAAAAAQAAAAEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAEAAAADAAAAAwAA
        AA8AAAB/AAAD/wAAB/8AAA//gAAf/+AAf/8=
</value>
  </data>
</root>