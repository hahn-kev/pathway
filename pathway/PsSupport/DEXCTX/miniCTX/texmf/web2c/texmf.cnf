% This file is mostly the same as the one that ships with
% texlive, but adapted for multiple trees as well as
% development in a non tds tree (i.e. hh's machine). This
% file is meant for context users.
%
% This file loads before texmf/web2c/texmf.cnf; beware :
% the selfish auto parent can get in the way especially when
% the binaries are located elsewhere. In case of multiple
% trees, one can best set the following ones manually.

progname = unsetprogname
engine   = unsetengine
backend  = unsetbackend

% binaries and formats
TEXMFOS       = $SELFAUTODIR

% base TeX files & fonts
TEXMFMAIN     = $SELFAUTOPARENT/texmf
% ConTeXt
TEXMFCONTEXT  = $SELFAUTOPARENT/texmf-context

% user additions & modifications - take precedence over distribution files
TEXMFLOCAL    = $SELFAUTOPARENT/texmf-local

% optional (by/for Hans)
TEXMFFONTS    = $SELFAUTOPARENT/texmf-fonts
TEXMFEXTRA    = $SELFAUTOPARENT/texmf-extra
TEXMFPROJECT  = $SELFAUTOPARENT/texmf-project

TEXMFHOME     = $HOME/texmf
TEXMF         = {$TEXMFHOME,!!$TEXMFPROJECT,!!$TEXMFFONTS,!!$TEXMFLOCAL,!!$TEXMFCONTEXT,!!$TEXMFOS,!!$TEXMFEXTRA,!!$TEXMFMAIN}
SYSTEXMF      = $TEXMF

TEXMFCACHE    = $SELFAUTOPARENT/texmf-cache

TEXMFCNF      = .;$TEXMF/web2c
TEXMFDBS      = $TEXMF

% In the case of an multi-os setup, this one can be set
% by the environment. watch out, lowercase engine !

TEXFORMATS    = .;$TEXMFOS/web2c/{$engine,}
MPMEMS        = .;$TEXFORMATS

WEB2C         = $TEXMF/web2c

% fonts, for the moment we also support the old enc/map locations

OSFONTDIR =

TEXPSHEADERS  = .;$TEXMF/{fonts/{enc,map,type1,truetype},dvips,pdftex,tex}//;$TEXMF/{etex,tex,pdftex,dvips,fonts/type1}//

TEXFONTMAPS.dvipdfmx = .;$TEXMF/fonts/{map,data}/{dvipdfmx,pdftex,dvips,dvipdfm,}//
TEXFONTMAPS.pdftex   = .;$TEXMF/fonts/{map,data}/{pdftex,dvips,}//
TEXFONTMAPS.pdfetex  = .;$TEXMF/fonts/{map,data}/{pdftex,dvips,}//
TEXFONTMAPS.luatex   = .;$TEXMF/fonts/{map,data}/{pdftex,dvips,}//
% do we need this for XeTeX?
%TEXFONTMAPS.xetex    = .;$TEXMF/fonts/{map,data}/{xetex,pdftex,dvips,}//
TEXFONTMAPS.dvips    = .;$TEXMF/fonts/{map,data}/{dvips,pdftex,}//

TEXFONTMAPS   = .;$TEXMF/fonts/{map,data}/{$progname,$engine,pdftex,dvips,}//;$TEXMF/{$progname,$engine,pdftex,dvips}/{config,}//

VFFONTS       = .;$TEXMF/fonts/vf//
TFMFONTS      = .;$TEXMF/fonts/{data,tfm}//
T1FONTS       = .;$TEXMF/fonts/{data,type1,pfb}//;$TEXMF/fonts/misc/hbf//;$OSFONTDIR;
AFMFONTS      = .;$TEXMF/fonts/{data,afm}//;$OSFONTDIR;
LIGFONTS      = .;$TEXMF/fonts/lig//
TTFONTS       = .;$TEXMF/fonts/{data,truetype,ttf}//;$OSFONTDIR;
TTF2TFMINPUTS = .;$TEXMF/ttf2pk//
T42FONTS      = .;$TEXMF/fonts/type42//
MISCFONTS     = .;$TEXMF/fonts/misc//
% ENCFONTS    = .;$TEXMF/fonts/enc//
ENCFONTS      = .;$TEXMF/{fonts/{data,enc},dvips,pdftex,dvipdfm}//
CMAPFONTS     = .;$TEXMF/fonts/cmap//
SFDFONTS      = .;$TEXMF/fonts/sfd//
OPENTYPEFONTS = .;$TEXMF/fonts/{data,opentype}//;$OSFONTDIR

OFMFONTS      = .;$TEXMF/fonts/{ofm,tfm}//
OPLFONTS      = .;$TEXMF/fonts/opl//;
OVFFONTS      = .;$TEXMF/fonts/{ovf,vf}//
OVPFONTS      = .;$TEXMF/fonts/ovp//;
OTPINPUTS     = .;$TEXMF/omega/otp//
OCPINPUTS     = .;$TEXMF/omega/ocp//
OTFFONTS      = .;$TEXMF/fonts/otf/{xetex,}//;

% configurations

% resource paths, can be used in paranoid situations (can be env vars)

TXRESOURCES=unset
MPRESOURCES=$TXRESOURCES
MFRESOURCES=$MPRESOURCES

% some extra paths for development trees (can be env vars)

CTXDEVTXPATH=unset
CTXDEVMPPATH=unset
CTXDEVMFPATH=unset

% TEXINPUTS = .;{$TXRESOURCES}//;{$CTXDEVTXPATH};$TEXMF/{pdftex,pdfetex,etex,xetex,omega,tex}/{context,plain,generic,}//
TEXINPUTS = .;{$TXRESOURCES}//;{$CTXDEVTXPATH};$TEXMF/{pdftex,pdfetex,etex,xetex,omega,tex}/{$progname,plain,generic,}//

% TEXINPUTS.context = .;{$TXRESOURCES}//;{$CTXDEVTXPATH};$TEXMF/{pdftex,pdfetex,etex,xetex,omega,tex}/{context,plain,generic,}//
% TEXINPUTS.context = .;{$TXRESOURCES}//;{$CTXDEVTXPATH};$TEXMF/{tex,omega}/{context,plain,generic}//
% TEXINPUTS.context = .;{$TXRESOURCES}//;{$CTXDEVTXPATH};$TEXMF/tex/{context,plain/base,generic/context,generic/hyphen,generic/omega}//
TEXINPUTS.context = .;{$TXRESOURCES}//;{$CTXDEVTXPATH};$TEXMF/tex/{context,plain/base,generic}//
MPINPUTS          = .;{$MFRESOURCES}//;{$CTXDEVMPPATH};$TEXMF/metapost/{context,base,}//
% MFINPUTS       = .;{$MPRESOURCES}//;{$CTXDEVMFPATH};$TEXMF/metafont/{context,base,}//;{$TEXMF/fonts,$VARTEXFONTS}/source//
MFINPUTS          = .;{$MPRESOURCES}//;{$CTXDEVMFPATH};$TEXMF/metafont/{context,base,}//;$TEXMF/fonts/source//

TEXCONFIG     = .;$TEXMF/{fonts/map,dvips,pdftex,dvipdfmx,dvipdfm}//
PDFTEXCONFIG  = .;$TEXMF/pdftex/{$progname,}//
DVIPDFMINPUTS = .;$TEXMF/{fonts/{map,enc,lig}/dvipdfm,fonts/type1,dvips,pdftex,dvipdfmx,dvipdfm}//

BIBINPUTS = .;{$TXRESOURCES}//;{$CTXDEVTXPATH};$TEXMF/bibtex/bib//
BSTINPUTS = .;{$TXRESOURCES}//;{$CTXDEVTXPATH};$TEXMF/bibtex/bst//

% this way we can hook in development paths

CTXDEVPLPATH=unset
CTXDEVPYPATH=unset
CTXDEVRBPATH=unset
CTXDEVJVPATH=unset

% some old paths; we restrict the search to context paths; new ones as well as old ones

PERLINPUTS     = .;$CTXDEVPLPATH;$TEXMF/scripts/context/perl
PYTHONINPUTS   = .;$CTXDEVPYPATH;$TEXMF/scripts/context/python
RUBYINPUTS     = .;$CTXDEVRBPATH;$TEXMF/scripts/context/ruby
% LUAINPUTS    = .;$CTXDEVLUPATH;$TEXMF/scripts/context/lua
JAVAINPUTS     = .;$CTXDEVJVPATH;$TEXMF/scripts/context/java

% LUAINPUTS    = .;$TEXINPUTS;$TEXMFSCRIPTS
LUAINPUTS      = .;$CTXDEVLUPATH;$TEXINPUTS;$TEXMF/scripts/context/lua
TEXMFSCRIPTS   = .;$CTXDEVLUPATH;$TEXINPUTS;$CTXDEVRBPATH;$CTXDEVPLPATH;$TEXMF/scripts/context//

% RUBYINPUTS   = .;$CTXDEVPLPATH;$TEXMF/scripts/{$progname,$engine,}/ruby
% LUAINPUTS    = .;$CTXDEVPYPATH;$TEXMF/scripts/{$progname,$engine,}/lua
% PYTHONINPUTS = .;$CTXDEVRBPATH;$TEXMF/scripts/{$progname,$engine,}/python
% PERLINPUTS   = .;$CTXDEVJVPATH;$TEXMF/scripts/{$progname,$engine,}/perl
% JAVAINPUTS   = .;$CTXDEVJVPATH;$TEXMF/scripts/{$progname,$engine,}/java

% features

shell_escape            = t
%openout_any            = a
openout_any             = p
openin_any              = a
parse_first_line        = f
allow_multiple_suffixes = f

% auto generation

MKTEXTEX = 0
MKTEXPK  = 0
MKTEXMF  = 0
MKTEXTFM = 0
MKOCP    = 0
MKOFM    = 0

% metapost

MPXCOMMAND = texexec --batch --once --nomp --mptex
TEX        = texexec --batch --once --nomp

% These values are about the same as in the main
% configuration file (dest_names_size added).

buf_size                 = 1000000
extra_mem_bot            = 1000000
extra_mem_top            = 2000000
font_max                 =    2500
font_mem_size            = 1000000
hash_extra               =   50000
main_memory              = 2000000
max_strings              =  150000
nest_size                =     500
pdf_mem_size             =  250000
param_size               =   10000
pool_free                =   47500
pool_size                = 1000000
save_size                =   10000
stack_size               =    5000
string_vacancies         =  100000
trie_size                =  500000
hyph_size                =    8191
expand_depth             =   10000

buf_size.context         = 4000000 % needed for omega bug
extra_mem_bot.context    = 2000000
extra_mem_top.context    = 4000000
font_max.context         =    5000
font_mem_size.context    = 2000000
hash_extra.context       =  100000
main_memory.context      = 2000000
max_strings.context      =  300000
nest_size.context        =     500
pdf_mem_size.context     =  500000
param_size.context       =   10000
pool_free.context        =   47500
pool_size.context        = 2000000
save_size.context        =   50000
stack_size.context       =   10000
string_vacancies.context =  125000
trie_size.context        =  500000
hyph_size.context        =    8191 % prime
expand_depth.context     =   10000

obj_tab_size.context     =  300000 % obsolete in 1.40+
dest_names_size.context  =  300000 % obsolete in 1.40+

main_memory.mpost        = 3000000
pool_size.mpost          = 3000000
max_strings.mpost        =  200000
path_size.mpost          =   10000
nest_size.mpost          =     500
param_size.mpost         =   10000
save_size.mpost          =   50000
stack_size.mpost         =    5000
string_vacancies.mpost   =   90000

main_memory.metafun      = 3000000
pool_size.metafun        = 3000000
max_strings.metafun      =  200000
path_size.metafun        =   10000
nest_size.metafun        =     500
param_size.metafun       =   10000
save_size.metafun        =   50000
stack_size.metafun       =    5000
string_vacancies.metafun =   90000

buf_size                 =  400000

mp_buf_size              =   30000
mf_buf_size              =   30000
mpost_buf_size           =   30000

max_print_line.pdftex    =    255
max_print_line.luatex    =    255
max_print_line.mpost     =    255
max_print_line.metafun   =    255

extra_mem_top.mptopdf    = 1000000
extra_mem_bot.mptopdf    = 1000000

ocp_buf_size             =  500000
ocp_stack_size           =   10000
ocp_list_size            =    1000

% Just for xetex:

FONTCONFIG_FILE = fonts.conf
FONTCONFIG_PATH = $TEXMFOS/fonts/conf
FC_CACHEDIR     = $TEXMFOS/fonts/cache

