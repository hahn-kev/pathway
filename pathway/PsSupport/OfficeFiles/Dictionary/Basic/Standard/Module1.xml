<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="Module1" script:language="StarBasic">
&apos;Changed On Mar-24-2014 for TD-3888


&apos;This is main method, which will be called when document opened. It calls other mothods to perform 
Sub StartDontForget
On Error GoTo MyError:

	TurnOffNonPrintingCharacters() 
	
	UpdateTOC()
	
	If IsCoverImageInserted = &quot;true&quot; And Right(Trim(ThisComponent.Title),4) = &quot;.odm&quot; Then
		SetImageToCoverPage()
	End If
	
	KeepLastGuidewordRight()
	
	HideODMVariable()

	If Lcase(OutputFormat) &lt;&gt; &quot;odt&quot; And Len(Trim(OutputFormat)) &gt; 0 Then
		ExportToDOC_PDF
	End IF
	
	Exit Sub
MyError:
End Sub

&apos;This function gives the Total Pages of the current file, this method called by HideODMVariable method.
Function TotalPages()
	Dim cont
	cont = ThisComponent.getCurrentController()
	TotalPages = cont.PageCount
End Function

&apos;For some documents, some pages will not show the correct guideword, 
&apos;So this method leaves small space and remove that text in end of the document. 
&apos;Because of this change, guideword will be shown correctly in all the pages.
Sub HideODMVariable
PageCount = TotalPages
ThisComponent.currentController.getViewCursor().jumpToPage(PageCount)


dim document   as object
dim dispatcher as object

document   = ThisComponent.CurrentController.Frame
dispatcher = createUnoService(&quot;com.sun.star.frame.DispatchHelper&quot;)

dim args1(0) as new com.sun.star.beans.PropertyValue
args1(0).Name = &quot;Text&quot;
args1(0).Value = &quot; &quot;

dispatcher.executeDispatch(document, &quot;.uno:InsertText&quot;, &quot;&quot;, 0, args1())

dispatcher.executeDispatch(document, &quot;.uno:SwBackspace&quot;, &quot;&quot;, 0, Array())
ThisComponent.currentController.getViewCursor().jumpToPage(1)
end sub

&apos;This procedure set RightGuideword on Right align in Header
Sub KeepLastGuidewordRight
  For i = 0 To ThisComponent.getDrawPage().GetCount -1
  	oGraphic  = ThisComponent.getDrawPage().getByIndex(i)
	if oGraphic.Height &lt; 1000 Then
		oGraphic.HoriOrient = com.sun.star.text.HoriOrientation.RIGHT
		Exit For
	End IF
  Next
End Sub

&apos;This method will update the Table of Content
Sub UpdateTOC
On Error GoTo MyError:
   oDoc = ThisComponent
   oDoc.refresh() 
   oIndexes = oDoc.getDocumentIndexes() 
   oIndex = oIndexes.getByName(&quot;Table of Contents1&quot;) 
   oIndex.update() 
Exit Sub
MyError:

End Sub


&apos;This method aligns Cover page Image to Page Align(Full Page)
Sub SetImageToCoverPage

  For i = 0 To ThisComponent.getDrawPage().GetCount -1
  	oGraphic  = ThisComponent.getDrawPage().getByIndex(i)
	&apos;&apos;msgbox  	oGraphic.Width  &amp; &quot;   &quot; &amp; oGraphic.Height
	if oGraphic.Height &gt; 10000 Then
		oGraphic.AnchorType = com.sun.star.text.TextContentAnchorType.AT_PAGE
	End IF
  Next

End Sub

&apos;This method turn off non-printing characters in document.
Sub TurnOffNonPrintingCharacters
	dim document   as object
	dim dispatcher as object
	
	document   = ThisComponent.CurrentController.Frame
	dispatcher = createUnoService(&quot;com.sun.star.frame.DispatchHelper&quot;)
	
	dim args1(0) as new com.sun.star.beans.PropertyValue
	args1(0).Name = &quot;ControlCodes&quot;
	args1(0).Value = false
	
	dispatcher.executeDispatch(document, &quot;.uno:ControlCodes&quot;, &quot;&quot;, 0, args1())
end sub



&apos;This procedure exports Odt file into Word/PDF based on the OutputFormat in given FilePath
Sub ExportToDOC_PDF
&apos;stardesktop.terminate 
On Error GoTo MyError:
	Dim FilePathWithName,filterType as string
	Dim oSvc as Object
	Dim MyArray, FileName
   	oDoc = ThisComponent 
	
	
If IsTOC = &quot;false&quot; Then
  oText = oDoc.getText() 
  oEnd = oText.getEnd() 
  oIndex = oDoc.createInstance(&quot;com.sun.star.text.ContentIndex&quot;) 
  oIndex.CreateFromOutline = True 
  oIndex.CreateFromLevelParagraphStyles = True &apos; use custom para styles 

  &apos; Adds &quot;Heading a&quot; style to level 2 in this case. 
  oLevelParaStyles = oIndex.LevelParagraphStyles 
  oLevelParaStyles.replaceByIndex(1, Array(&quot;Test&quot;)) 
  
  oText.insertTextContent(oEnd,oIndex,False) 

  oIndex.Title = &quot;&quot;
  oIndex.update() 
End If
  
	FilePathWithName = FilePath &amp; &quot;.&quot; &amp; OutputFormat
   	fileURL = ConvertToURL(FilePathWithName)
   	
	if Lcase(OutputFormat) = &quot;doc&quot; Then
		filterType = &quot;MS WinWord 6.0&quot; 
	else
		filterType = &quot;writer_pdf_Export&quot;
	End If 
  &apos;===================================================================================	
  Dim aFilterData (1) as new com.sun.star.beans.PropertyValue 
  	aFilterData(1).Name  = &quot;Quality&quot;
   	aFilterData(1).Value = 40
  Dim aArgs(2) as new com.sun.star.beans.PropertyValue 
  aArgs(0).Name = &quot;FilterName&quot;
  aArgs(0).Value = &quot;writer_pdf_Export&quot; 
  aArgs(1).Name = &quot;FilterData&quot;
  aArgs(1).Value = aFilterData
  &apos;===================================================================================		
   	&apos;oDoc.storeToURL(fileURL, Array(MakePropertyValue(&quot;FilterName&quot;,filterType)) 
	oDoc.storeToURL(fileURL, aArgs)

	If Lcase(IsPreview) = &quot;false&quot; And Len(Trim(FilePath)) &gt; 4  Then
		oSvc = createUnoService(&quot;com.sun.star.system.SystemShellExecute&quot;) 
		If(mid(FilePath,1,5) = &quot;/home&quot;) Then
		  	MyArray = Split(FilePath,&quot;/&quot;)
		  	FileName =  MyArray(UBound(MyArray))
			FilePathWithName = Replace(FilePathWithName,FileName + &quot;.pdf&quot;,&quot;PdfLicense.exe&quot;)
			Shell(&quot;chmod a+x &quot; &amp; FilePathWithName, &quot;&quot;,1)
			Shell(ConvertToURL(FilePathWithName), &quot;&quot;,1)
			&apos;Shell(&quot;xdg-open &quot; + FilePathWithName)

		Else
		  	MyArray = Split(FilePath,&quot;\&quot;)
		  	FileName =  MyArray(UBound(MyArray))
			FilePathWithName = Replace(FilePathWithName,FileName + &quot;.pdf&quot;,&quot;PdfLicense.exe&quot;)
			  			 
			oSvc.execute(ConvertToURL(FilePathWithName), &quot;&quot;, 1)
			
			&apos;oSvc.execute(FilePathWithName, &quot;&quot;, 0) 
		End If
	End If

	&apos;msgbox(&quot;dispose&quot;)
	&apos;wait 5000 
	&apos;CleanUp()
	oDoc.dispose()
	&apos;msgbox(&quot;disposeEnd&quot;)
	&apos;wait 5000 
Exit Sub
MyError:
&apos;	msgbox &quot;Same file has been opened already&quot; , 0 + 64,  &quot;File Error&quot;	
End Sub

&apos;This function sets the Property Value as Word or PDF
Function MakePropertyValue( Optional cName As String, Optional uValue ) As com.sun.star.beans.PropertyValue 
   Dim oPropertyValue As New com.sun.star.beans.PropertyValue 
   If Not IsMissing( cName ) Then 
      oPropertyValue.Name = cName 
   EndIf 
   If Not IsMissing( uValue ) Then 
      oPropertyValue.Value = uValue 
   EndIf 
   MakePropertyValue() = oPropertyValue 
End Function 


</script:module>