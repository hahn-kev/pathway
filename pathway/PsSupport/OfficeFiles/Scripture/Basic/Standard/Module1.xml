<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="Module1" script:language="StarBasic">
&apos;Changed On Sep-12-2013 for TD-3616

Dim CanSave as Boolean

&apos;This procedure set the dialgue to correct Update References 
Sub StartDontForget
On Error GoTo MyError:
	TurnOffNonPrintingCharacters() 
	
	&apos;AlingOverlappingImages()

	UpdateTOC()
	
	&apos;If IsCoverImageInserted = &quot;true&quot; And Right(Trim(ThisComponent.Title),4) = &quot;.odm&quot; Then
		&apos;SetImageToCoverPage()
	&apos;End If
	
	If CanSave Then
		oDoc = ThisComponent 
		oDoc.store() 
	End If
	
	If Lcase(OutputFormat) &lt;&gt; &quot;odt&quot; And Len(Trim(OutputFormat)) &gt; 0 Then
		ExportToDOC_PDF
	End IF
	
	Exit Sub
MyError:
End Sub


&apos;Update the Table of Content
Sub UpdateTOC
On Error GoTo MyError:
   oDoc = ThisComponent
   oDoc.refresh() 
   oIndexes = oDoc.getDocumentIndexes() 
   oIndex = oIndexes.getByName(&quot;Table of Contents1&quot;) 
   oIndex.update() 
Exit Sub
MyError:

End Sub


&apos;This procedure align Cover page Image
Sub SetImageToCoverPage
	if ThisComponent.getDrawPage().GetCount &gt; 0 Then
		oGraphic  = ThisComponent.getDrawPage().getByIndex(0)
		oGraphic.AnchorType = com.sun.star.text.TextContentAnchorType.AT_PAGE
	End If
End Sub

&apos;This procedure turn off non-printing characters
Sub TurnOffNonPrintingCharacters
	dim document   as object
	dim dispatcher as object
	
	document   = ThisComponent.CurrentController.Frame
	dispatcher = createUnoService(&quot;com.sun.star.frame.DispatchHelper&quot;)
	
	dim args1(0) as new com.sun.star.beans.PropertyValue
	args1(0).Name = &quot;ControlCodes&quot;
	args1(0).Value = false
	
	dispatcher.executeDispatch(document, &quot;.uno:ControlCodes&quot;, &quot;&quot;, 0, args1())
end sub

&apos;This procedure align the overlapping images
Sub AlingOverlappingImages 
dim frameCount, lclNo 
oGraphics = ThisComponent.getTextFrames

frameCount = oGraphics.getCount() -1
lclNo = 0
  For i = 0 To oGraphics.getCount() -1 step 1 
    	oGraphic = oGraphics.getByIndex(i)
    	If frameCount &gt; i Then
	    	nxt = oGraphics.getByIndex(i + 1)
			If nxt.HoriOrientPosition = oGraphic.HoriOrientPosition Then
				lclNo = lclNo + 1
				If lclNo = 1 Then
				 	oGraphic.HoriOrient = 3
				 	nxt.HoriOrient = 2
				elseif lclNo = 2 Then
				 	oGraphic.HoriOrient = 2
				 	nxt.HoriOrient = 1	
				End If
				if lclNo = 3 Then lclNo = 0
				
				CanSave = True
			End If
		End If
  Next    
End Sub

&apos;This procedure exports Odt file into Word/PDF based on the OutputFormat in given FilePath
Sub ExportToDOC_PDF
&apos;stardesktop.terminate 
On Error GoTo MyError:
	Dim FilePathWithName,filterType as string
	Dim oSvc as Object
	Dim MyArray, FileName	
   	oDoc = ThisComponent 
	
	FilePathWithName = FilePath &amp; &quot;.&quot; &amp; OutputFormat
   	fileURL = ConvertToURL(FilePathWithName)
   	
	if Lcase(OutputFormat) = &quot;doc&quot; Then
		filterType = &quot;MS WinWord 6.0&quot; 
	else
		filterType = &quot;writer_pdf_Export&quot;
	End If 
  &apos;===================================================================================	
  Dim aFilterData (1) as new com.sun.star.beans.PropertyValue 
  	aFilterData(1).Name  = &quot;Quality&quot;
   	aFilterData(1).Value = 40
  Dim aArgs(2) as new com.sun.star.beans.PropertyValue 
  aArgs(0).Name = &quot;FilterName&quot;
  aArgs(0).Value = &quot;writer_pdf_Export&quot; 
  aArgs(1).Name = &quot;FilterData&quot;
  aArgs(1).Value = aFilterData
  &apos;===================================================================================		
   	&apos;oDoc.storeToURL(fileURL, Array(MakePropertyValue(&quot;FilterName&quot;,filterType)) 
	oDoc.storeToURL(fileURL, aArgs)

	If Lcase(IsPreview) = &quot;false&quot; And Len(Trim(FilePath)) &gt; 4  Then
		oSvc = createUnoService(&quot;com.sun.star.system.SystemShellExecute&quot;) 
		If(mid(FilePath,1,5) = &quot;/home&quot;) Then
		  	MyArray = Split(FilePath,&quot;/&quot;)
		  	FileName =  MyArray(UBound(MyArray))
			FilePathWithName = Replace(FilePathWithName,FileName + &quot;.pdf&quot;,&quot;ApplyPDFLicenseInfo.exe&quot;)
			Shell(&quot;chmod a+x &quot; &amp; FilePathWithName, &quot;&quot;,1)
			Shell(ConvertToURL(FilePathWithName), &quot;&quot;,1)
			&apos;Shell(&quot;xdg-open &quot; + FilePathWithName)

		Else
		  	MyArray = Split(FilePath,&quot;\&quot;)
		  	FileName =  MyArray(UBound(MyArray))
			FilePathWithName = Replace(FilePathWithName,FileName + &quot;.pdf&quot;,&quot;ApplyPDFLicenseInfo.exe&quot;)
			  			 
			oSvc.execute(ConvertToURL(FilePathWithName), &quot;&quot;, 1)
			
			&apos;oSvc.execute(FilePathWithName, &quot;&quot;, 0) 
		End If
	End If

	&apos;msgbox(&quot;dispose&quot;)
	wait 5000
	CleanUp()
	oDoc.dispose()
	&apos;msgbox(&quot;disposeEnd&quot;)
	&apos;wait 5000 
Exit Sub
MyError:
&apos;	msgbox &quot;Same file has been opened already&quot; , 0 + 64,  &quot;File Error&quot;	
End Sub

&apos;CleanUp Unwanted Files
Sub CleanUp
Dim s As String 
Dim Path As String
MyArray = Split(FilePath,&quot;\&quot;)
FileName =  MyArray(UBound(MyArray))
Path = Replace(FilePath,FileName,&quot;&quot;)
&apos;Path = &quot;D:\SIL\Task\YearV\TD-3616\FieldWorksA5Styles_2013-09-06_110256\Work\&quot;
  NextFile = Dir(Path, 0)
 
  While NextFile  &lt;&gt; &quot;&quot;
	If(InStr(NextFile, &quot;xhtml&quot;) &gt; 0 Or InStr(NextFile, &quot;merge&quot;) &gt; 0 Or (InStr(NextFile, &quot;1.pdf&quot;) &gt; 0) Or (InStr(NextFile, &quot;.odm&quot;) &gt; 0) ) Then
	Else
		If(Right(Trim(ThisComponent.Title),4) &lt;&gt; &quot;.odm&quot; And InStr(NextFile,&quot;.odt&quot;) &gt; 0 ) Then
		Else
			Kill Path &amp; NextFile
		End If
	End if
	NextFile = Dir
  Wend
  &apos;Msgbox &quot;Killed&quot;
End Sub


&apos;This function sets the Property Value as Word or PDF
Function MakePropertyValue( Optional cName As String, Optional uValue ) As com.sun.star.beans.PropertyValue 
   Dim oPropertyValue As New com.sun.star.beans.PropertyValue 
   If Not IsMissing( cName ) Then 
      oPropertyValue.Name = cName 
   EndIf 
   If Not IsMissing( uValue ) Then 
      oPropertyValue.Value = uValue 
   EndIf 
   MakePropertyValue() = oPropertyValue 
End Function 


</script:module>