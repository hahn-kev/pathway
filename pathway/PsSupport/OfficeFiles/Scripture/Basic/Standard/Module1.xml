<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="Module1" script:language="StarBasic">
&apos;Changed On Jan-18-2011 for TD-1800(Header with book name and abbreviation)

&apos;Define the values to Constant Variables for Reference Hidden Paragraph Style
Const FIRSTGUIDESTYLE = &quot;GuideL&quot;
Const LASTGUIDESTYLE =  &quot;GuideR&quot;

&apos;Const ENTRYPARASTYLE =  &quot;Paragraph_scrSection_scrBook&quot; &apos;&quot;first_section_scriptureText&quot; &apos;&quot;entry_letData&quot;
Const ENTRYPARASTYLE =  &quot;scrBook&quot; &apos; &quot;Paragraph_scrSection_scrBook&quot;
&apos;Declaration of Reference Variables
Dim LastParagraph(0) As String
Dim strStartBook, strEndBook
Dim strStartChapter As String
Dim strPrevStartChapter As String
Dim strEndChapter As String
Dim strStartVerse As String
Dim strEndVerse As String
Dim strFirstParagraph
Dim VerseNumber As String


&apos; needs writer document 
Dim oProgressBarModel As Object 
Dim oSubWindow As Object
Dim oFrame As Object
Dim oSubFrame As Object
Dim ProgressValue As Integer
Dim PageCount as Integer


&apos;Set Picture Position based on Reference Location
Sub PicturePosition
dim frameCount, lclNo 
oGraphics = ThisComponent.getTextFrames

frameCount = oGraphics.getCount() -1
lclNo = 0
  For i = 0 To oGraphics.getCount() -1 step 1 
    	oGraphic = oGraphics.getByIndex(i)
    	If frameCount &gt; i Then
	    	GetPictureVerse(oGraphic.String)
		End If
  Next  
End Sub

&apos;Place the Image within verse
Sub GetPictureVerse(ImageCaption)
	Dim pos as Integer
	Dim style as String
	pos=Mid(ImageCaption,len(ImageCaption)-2)
	move(pos,style)
End Sub

&apos;Create Progress bar
Sub ShowProcessingDialog() 
  oDoc = ThisComponent &apos; needs document 
  oController = oDoc.getCurrentController() 
  oFrame = oController.getFrame() 
  oContainerWindow = oFrame.ContainerWindow 
  oToolkit = oContainerWindow.Toolkit 
  
  &apos; sub window with sub frame 
  oSubWindow = CreateNewWindow(oToolkit,oContainerWindow, 300,300,500,120) 
  oSubWindow.Title=&quot;Update References&quot;
  oSubFrame = CreateUnoService(&quot;com.sun.star.frame.Frame&quot;) 
  oSubFrame.initialize(oSubWindow) 
  oFrame.getFrames().append(oSubFrame) 
  
  &apos; container of controls (Frame)
  oContainer = CreateUnoService(&quot;com.sun.star.awt.UnoControlContainer&quot;) 
  oContainerModel = CreateUnoService(&quot;com.sun.star.awt.UnoControlContainerModel&quot;) 
  oContainerModel.BackgroundColor = &quot;&amp;HEEEEEE&quot; &apos;-1 
  oContainer.setModel(oContainerModel) 
  oContainer.setPosSize(0,0,500,120,com.sun.star.awt.PosSize.POSSIZE) 
  oContainer.createPeer(oToolkit,oSubWindow) 
  
  &apos; progressbar 
  oProgressBarModel = CreateUnoService(&quot;com.sun.star.awt.UnoControlProgressBarModel&quot;) 
  oProgressBar = CreateUnoService( &quot;com.sun.star.awt.UnoControlProgressBar&quot; ) 
  oProgressBar.setModel(oProgressBarModel) 
  oProgressBar.setPosSize(50,65,400,30, com.sun.star.awt.PosSize.POSSIZE ) 
  oContainer.addControl(&quot;progressbar&quot;,oProgressBar) 
  
  &apos; label 1
  oLabel = CreateUnoService(&quot;com.sun.star.awt.UnoControlFixedText&quot;) 
  oLabelModel = CreateUnoService(&quot;com.sun.star.awt.UnoControlFixedTextModel&quot;) 
  oLabelModel.Label = &quot;The Open Office window will be hidden while the headers are updated&quot;
  oLabel.setModel(oLabelModel) 
  oLabel.Alignment = 1
  oLabel.setPosSize(5,20,500,30,com.sun.star.awt.PosSize.POSSIZE) 
  oContainer.addControl(&quot;label&quot;,oLabel) 

  &apos; label 2
  oLabel = CreateUnoService(&quot;com.sun.star.awt.UnoControlFixedText&quot;) 
  oLabelModel = CreateUnoService(&quot;com.sun.star.awt.UnoControlFixedTextModel&quot;) 
  oLabelModel.Label = &quot;because this reduces the time it takes to do the update.&quot; 
  oLabel.setModel(oLabelModel) 
  oLabel.Alignment = 1
  oLabel.setPosSize(5,37,500,30,com.sun.star.awt.PosSize.POSSIZE) 
  oContainer.addControl(&quot;label&quot;,oLabel) 
  
  &apos; show window 
  oSubWindow.setEnable(False) 
  oSubWindow.setVisible(True) 
 &apos; oSubWindow.setVisible(False) 
End Sub 

&apos;Increments progressbar value
Sub MyProgressBar(ProgressValue)
	oProgressBarModel.ProgressValue = ProgressValue &apos; * 1
End Sub

&apos; create new non-modal dialog 
Function CreateNewWindow(oToolkit,oParent,nX,nY,nWidth,nHeight) As Object 
  aRect = CreateUnoStruct(&quot;com.sun.star.awt.Rectangle&quot;) 
  With aRect 
    .X = nX 
    .Y = nY 
    .Width = nWidth 
    .Height = nHeight 
  End With 
  aWinDesc = CreateUnoStruct(&quot;com.sun.star.awt.WindowDescriptor&quot;) 
  With aWinDesc 
    .Type = com.sun.star.awt.WindowClass.TOP 
    .WindowServiceName = &quot;dialog&quot; 
    .ParentIndex = -1 
    .Bounds = aRect 
    .Parent = oParent 
    .WindowAttributes = com.sun.star.awt.WindowAttribute.MOVEABLE + com.sun.star.awt.WindowAttribute.CLOSEABLE 
  End With 
  CreateNewWindow = oToolkit.createWindow(aWinDesc) 
End Function  
 
 


&apos;-------------------------------------------------------

&apos;This procedure turn off non-printing characters
Sub TurnOffNonPrintingCharacters
	dim document   as object
	dim dispatcher as object
	
	document   = ThisComponent.CurrentController.Frame
	dispatcher = createUnoService(&quot;com.sun.star.frame.DispatchHelper&quot;)
	
	dim args1(0) as new com.sun.star.beans.PropertyValue
	args1(0).Name = &quot;ControlCodes&quot;
	args1(0).Value = false
	
	dispatcher.executeDispatch(document, &quot;.uno:ControlCodes&quot;, &quot;&quot;, 0, args1())
end sub

&apos;This procudure enables/disables the &quot;Auto Recovery&quot;
Sub AutoSaveEnableDisable(value as Boolean)

	dim document   as object
	dim dispatcher as object
	
	document   = ThisComponent.CurrentController.Frame
	dispatcher = createUnoService(&quot;com.sun.star.frame.DispatchHelper&quot;)
	
	rem ----------------------------------------------------------------------
	dim args1(0) as new com.sun.star.beans.PropertyValue
	args1(0).Name = &quot;AutoSave&quot;
	args1(0).Value = value
	
	&apos;args1(1).Name = &quot;TimeIntervall&quot;
	&apos;args1(1).Value = 7
	
	&apos;CommitChanges
	&apos;AcceptChanges
	&apos;TimeIntervall
	dispatcher.executeDispatch(document, &quot;.uno:AcceptChanges&quot;, &quot;&quot;, 0, args1())
	dispatcher.executeDispatch(document, &quot;.uno:CommitChanges&quot;, &quot;&quot;, 0, args1())

End Sub

&apos;This procedure align the overlapping images
Sub AlingOverlappingImages 
dim frameCount, lclNo 
oGraphics = ThisComponent.getTextFrames

frameCount = oGraphics.getCount() -1
lclNo = 0
  For i = 0 To oGraphics.getCount() -1 step 1 
    	oGraphic = oGraphics.getByIndex(i)
    	If frameCount &gt; i Then
	    	nxt = oGraphics.getByIndex(i + 1)
			If nxt.HoriOrientPosition = oGraphic.HoriOrientPosition Then
				lclNo = lclNo + 1
				If lclNo = 1 Then
				 	oGraphic.HoriOrient = 3
				 	nxt.HoriOrient = 2
				elseif lclNo = 2 Then
				 	oGraphic.HoriOrient = 2
				 	nxt.HoriOrient = 1	
				End If
				if lclNo = 3 Then lclNo = 0
			End If
		End If
  Next    
End Sub

&apos;This procedure set the dialgue to correct Update References 
Sub StartDontForget

	&apos;Msgbox &quot;Please NOTE: Use the Update References menu item or tool bar item to correct the references before printing.&quot; , 0 + 64,  &quot;Reference Reminder&quot;
	TurnOffNonPrintingCharacters() 
	dim clicked as byte
	
	If Lcase(RunMacroFirstTime) = &quot;true&quot; Then
		If IsMacroRun = true Then
			clicked = msgbox(&quot;Headers are updated to contain the first and last book, chapter and / or verse with the &quot; + &quot;&quot;&quot;&quot; + &quot;Update References&quot; + &quot;&quot;&quot;&quot; + &quot; tool bar item or Macro menu item.&quot; &amp; chr(10) &amp; chr(10) &amp; &quot;This should be done once at the beginning and after any changes that affect what information is on a page.&quot;  &amp; chr(10) &amp; chr(10) &amp;  &quot;Would you like to update the headers now?&quot;, 4 + 32 + 256 , &quot;Run header macro?&quot;)
			&apos;clicked = msgbox (&quot;Headers are updated to contain the first and last book, chapter and / or verse with the &quot; + &quot;&quot;&quot;&quot; + &quot;Update References&quot; + &quot;&quot;&quot;&quot; + &quot; tool bar item or Macro menu item.&quot; &amp; chr(10) &amp; &quot;Would you like to update the headers now?&quot;, 4 + 32 + 256 , &quot;Reference Reminder&quot;)
			If clicked = 6 Then &apos;If Yes clicked
				SetReference
			Else
				If TotalPages &gt; 100 Then
					Msgbox(&quot;The headers will not appear to be correct until the repagination is complete.&quot; +  chr(10) + &quot;On long documents it may take a couple of minutes.&quot; &amp; chr(10) &amp; &quot;(Use File--&gt;Page Preview to force repagination.)&quot;,, &quot;Reference Reminder&quot;)
				End If
			End If
		Else
			if LCase(AutoMacro) = &quot;true&quot; Then
				SetReference
			else
				clicked = msgbox(&quot;Headers are updated to contain the first and last book, chapter and / or verse with the &quot; + &quot;&quot;&quot;&quot; + &quot;Update References&quot; + &quot;&quot;&quot;&quot; + &quot; tool bar item or Macro menu item.&quot; &amp; chr(10) &amp; chr(10) &amp; &quot;This should be done once at the beginning and after any changes that affect what information is on a page.&quot;  &amp; chr(10) &amp; chr(10) &amp;  &quot;Would you like to update the headers now?&quot;, 4 + 32 + 256 , &quot;Run header macro?&quot;)
				&apos;clicked = msgbox (&quot;Headers are updated to contain the first and last book, chapter and / or verse with the &quot; + &quot;&quot;&quot;&quot; + &quot;Update References&quot; + &quot;&quot;&quot;&quot; + &quot; tool bar item or Macro menu item.&quot; &amp; chr(10) &amp; &quot;Would you like to update the headers now?&quot;, 4 + 32 + 256 , &quot;Reference Reminder&quot;)
				If clicked = 6 Then &apos;If Yes clicked
					SetReference
				End If		
			end if	
		End If
	End If
	
	If Lcase(OutputFormat) &lt;&gt; &quot;odt&quot; Then
		ExportToDOC_PDF
	End IF
End Sub

Sub StartDontForgetTD1485

	&apos;Msgbox &quot;Please NOTE: Use the Update References menu item or tool bar item to correct the references before printing.&quot; , 0 + 64,  &quot;Reference Reminder&quot;
	if LCase(AutoMacro) = &quot;true&quot; Then
		&apos;If IsMacroRun = false Then
			SetReference
		&apos;End If
	else
		dim clicked as byte
		If IsMacroRun = true Then
			clicked = msgbox(&quot;Headers are updated to contain the first and last book, chapter and / or verse with the &quot; + &quot;&quot;&quot;&quot; + &quot;Update References&quot; + &quot;&quot;&quot;&quot; + &quot; tool bar item or Macro menu item.&quot; &amp; chr(10) &amp; chr(10) &amp; &quot;This should be done once at the beginning and after any changes that affect what information is on a page.&quot;  &amp; chr(10) &amp; chr(10) &amp;  &quot;Would you like to update the headers now?&quot;, 4 + 32 + 256 , &quot;Run header macro?&quot;)
			&apos;clicked = msgbox (&quot;Headers are updated to contain the first and last book, chapter and / or verse with the &quot; + &quot;&quot;&quot;&quot; + &quot;Update References&quot; + &quot;&quot;&quot;&quot; + &quot; tool bar item or Macro menu item.&quot; &amp; chr(10) &amp; &quot;Would you like to update the headers now?&quot;, 4 + 32 + 256 , &quot;Reference Reminder&quot;)
			If clicked = 6 Then &apos;If Yes clicked
				SetReference
			End If
		Else
			SetReference
		End If
	End If
	
	If Lcase(OutputFormat) &lt;&gt; &quot;odt&quot; Then
		ExportToDOC_PDF
	End IF
End Sub

&apos;This procedure removes existing hidden guide words
Function IsMacroRun

	Dim oParEnum           &apos;Paragraph enumerator 
	Dim oPar               &apos;Current paragraph 
	oParEnum = ThisComponent.Text.createEnumeration() 
	Do While oParEnum.hasMoreElements() 
		oPar = oParEnum.nextElement() 
		If oPar.supportsService(&quot;com.sun.star.text.Paragraph&quot;) Then 
			If InStr(oPar.ParaStyleName, &quot;Guide&quot;) &gt; 0 Then 
				IsMacroRun = true
				Exit Function
			End If 
		End If 
	Loop
	IsMacroRun = false
End Function

&apos;This procedure exports Odt file into Word/PDF based on the OutputFormat in given FilePath
Sub ExportToDOC_PDF
&apos;stardesktop.terminate 
&apos;On Error GoTo MyError:
	Dim FilePathWithName,filterType as string
	Dim oSvc as Object
   	oDoc = ThisComponent 
	
	FilePathWithName = FilePath &amp; &quot;.&quot; &amp; OutputFormat
   	fileURL = ConvertToURL(FilePathWithName)
   	
	if Lcase(OutputFormat) = &quot;doc&quot; Then
		filterType = &quot;MS WinWord 6.0&quot; 
	else
		filterType = &quot;writer_pdf_Export&quot;
	End If 
   	oDoc.storeToURL(fileURL, Array(MakePropertyValue(&quot;FilterName&quot;,filterType)) 

	If Lcase(IsPreview) = &quot;false&quot; Then
		oSvc = createUnoService(&quot;com.sun.star.system.SystemShellExecute&quot;) 
		oSvc.execute(FilePathWithName, &quot;&quot;, 0) 
	End If
	
	oDoc.dispose()
	&apos;wait 5000 
&apos;Exit Sub
&apos;MyError:
	&apos;msgbox &quot;Same file has been opened already&quot; , 0 + 64,  &quot;File Error&quot;	
End Sub
&apos;This function sets the Property Value as Word or PDF
Function MakePropertyValue( Optional cName As String, Optional uValue ) As com.sun.star.beans.PropertyValue 
   Dim oPropertyValue As New com.sun.star.beans.PropertyValue 
   If Not IsMissing( cName ) Then 
      oPropertyValue.Name = cName 
   EndIf 
   If Not IsMissing( uValue ) Then 
      oPropertyValue.Value = uValue 
   EndIf 
   MakePropertyValue() = oPropertyValue 
End Function 

&apos;The main procedure to show the Reference (Ex. Mark 1:1 - 2:26)
Sub SetReference()

On Error GoTo MyError:

Dim VerseCharStyle, ChapterCharStyle, BookCharStyle
Dim isEndChapterFoundAlready As Boolean
PageCount = TotalPages

Dim isProgressClosed As Boolean

	oDoc = ThisComponent 
	oContWindow = oDoc.CurrentController.Frame.ContainerWindow 
	
	&apos;msgbox &quot;The Open Office window will be hidden while the headers are updated since this cuts the time required for the update in half.&quot;,,&quot;Update References&quot;
	oContWindow.Visible = false 
	
	&apos;AutoSaveEnableDisable(false)&apos;disable the &quot;Auto Recovery&quot;
	
If Instr(ReferenceFormat,&quot;:&quot;) &gt; 0 Then
	VerseNumber = &quot;True&quot;
Else
	VerseNumber = &quot;False&quot;
End If

mytime = now

AlingOverlappingImages()

&apos;=========Progressbar
ShowProcessingDialog() 
ProgressValue = 5
oProgressBarModel.ProgressValueMax = PageCount * 4
&apos;=========Progressbar

oProgressBarModel.ProgressValue = ProgressValue
RemoveOldGuides

KeepNextParagraph

PageCount = TotalPages
Redim LastParagraph(PageCount+2) As String
Dim HiddenParagraph(PageCount,1) As String

GetLastParagraph

keep = chr(10) &amp; &quot;After General &quot; &amp; chr(10) &amp; mytime &amp; chr(10) &amp; now
mytime = now

strStartBook = &quot;&quot;
strEndBook = &quot;&quot;
strStartChapter = 1
strPrevStartChapter = 1
strEndChapter = 0
strStartVerse = 1
strEndVerse = 1
&apos;Assign the possible style Names to References (Book, Chapter, Verse)
&apos;VerseCharStyle = &quot;VerseNumber_ParagraphContinuation_scrSection_scrBook,VerseNumber_Line1_scrSection_scrBook,VerseNumber_Line2_scrSection_scrBook,VerseNumber_EmbeddedTextLine1_scrSection_scrBook,VerseNumber_Paragraph_scrSection_scrBook,VerseNumberAlternate_Paragraph_scrSection_scrBook,verseNumber_div_section_scriptureText,verseNumber_first_section_scriptureText,verseNumber_li_ul_section_scriptureText,VerseNumber_\f*_scrSection_columns_scrBook,VerseNumber_Paragraph_scrSection_columns_scrBook,VerseNumber_.bgt_Paragraph_scrSection_columns_scrBook,VerseNumber_.bgt_ParagraphContinuation_scrSection_columns_scrBook,VerseNumber_.x-kal_Paragraph_scrSection_columns_scrBook,VerseNumber_.x-kal_Paragraph1_scrSection_columns_scrBook,VerseNumber1_.x-kal_Paragraph1_scrSection_columns_scrBook&quot;
&apos;ChapterCharStyle = &quot;ChapterNumber_Paragraph_scrSection_scrBook,chapterNumber_first_section_scriptureText,ChapterNumber_Paragraph_scrSection_columns_scrBook,ChapterNumber_Paragraph1_scrSection_columns_scrBook&quot;
																										 
&apos;BookCharStyle = &quot;span_TitleMain_scrBook,scrBookName_scrBook,book_,span_.x-kal_TitleMain_scrBook&quot;

ThisComponent.currentController.getViewCursor().jumpToPage(2)
oDoc = ThisComponent 
oVC = oDoc.CurrentController.getViewCursor 
oVC.gotoStart(false) 
&apos; ( -00012 )



&apos;This loop read the file Page by Page
Do
    page = oVC.getPage 
    

		&apos;=========Progressbar    
			ProgressValue=ProgressValue+1
			MyProgressBar(ProgressValue)
		&apos;=========Progressbar    


	If page &gt; 1 Then
		oVC.jumpToStartOfPage
	
	If VerseNumber = &quot;True&quot; Or ReferenceFormat = &quot;Genesis 1, 2&quot; Or ReferenceFormat = &quot;Genesis 1&quot; Then
		First = oDoc.Text.createTextCursorByRange(oVC)
		strFirstParagraph = First
		&apos;Assign Start Verse Number
		GetReferenceASC(First,page,strStartVerse,&quot;V&quot;)
	End If
	
	oVC.jumpToStartOfPage
	First = oDoc.Text.createTextCursorByRange(oVC)	
	&apos;Assign Start Chapter Number
	GetReferenceASC(First,page,strStartChapter,&quot;C&quot;)
	&apos;If there is no chapter number in a page, we assign previous page&apos;s last chapter number to current page&apos;s Start and End Chapter Number
	If Val(strStartChapter) = 0 Then
		If Val(strEndChapter) = 0 Then
			strEndChapter = 1
		End If
		strStartChapter = strEndChapter
		isEndChapterFoundAlready = True
		IsBookChanged = &quot;No&quot;
	Else
		If Val(strEndChapter) &gt;= Val(strStartChapter) Then
			IsBookChanged = &quot;Yes&quot;
		End If 
	End If	
	
	&apos;We need to find New Book name when it changes
	&apos;Val(strEndChapter) &gt; Val(strStartChapter) --&gt; When Book changes
	&apos;strBook = &quot;&quot; --&gt; For First book find
	&apos;If Val(strEndChapter) &gt; Val(strStartChapter) Or strStartBook = &quot;&quot; Or (Val(strEndChapter) = 1 And Val(strStartChapter) = 1 And val(strStartVerse) &lt; val(strEndVerse)) Then 
     If IsBookChanged = &quot;Yes&quot; Or strStartBook = &quot;&quot; Then 
		&apos;oVC.jumpToStartOfPage
		First = oDoc.Text.createTextCursorByRange(oVC)
		&apos;Assign Book Name
		GetReferenceASC(First,page,strStartBook,&quot;B&quot;)
		If Val(strStartVerse) &lt;&gt; 1 Then 
			strStartChapter = strEndChapter
			strTemp = strStartBook
			strStartBook = strEndBook
			strEndBook = strTemp		
		Else
			strEndBook = strStartBook
		End If	
	End If	
	
	If VerseNumber = &quot;True&quot; Then
		oVC.jumpToEndOfPage
		Last = oDoc.Text.createTextCursorByRange(oVC)
		&apos;Assign End Verse Number
		GetReferenceDESC(Last,page,strEndVerse,&quot;V&quot;)
	End If
	
	&apos;Assign End Chapter Number
	If Not isEndChapterFoundAlready Then
		oVC.jumpToEndOfPage
		Last = oDoc.Text.createTextCursorByRange(oVC)	
		GetReferenceDESC(Last,page,strEndChapter,&quot;C&quot;)	
		&apos;If Val(strEndChapter) = 0 Then
			&apos;strEndChapter = strStartChapter
		&apos;End If	
	End If
	isEndChapterFoundAlready = False
	
	If strStartChapter = strEndChapter And Val(strStartChapter) &gt; Val(strPrevStartChapter) And Val(strStartChapter) &lt;&gt; 1 And Val(strStartVerse) &lt;&gt; 1 Then
		strStartChapter = strPrevStartChapter
	End If
	
	If VerseNumber = &quot;True&quot; Then
        If ReferenceFormat = &quot;Genesis 1:1-15&quot; Then
			strFirstReference = strStartBook &amp; &quot; &quot; &amp; strStartChapter &amp; &quot; : &quot; &amp; strStartVerse
			strLastReference = &quot;-&quot; &amp; strEndVerse
        ElseIf ReferenceFormat = &quot;Genesis 1:1 1:15&quot; Then
			strFirstReference = strStartBook &amp; &quot; &quot; &amp; strStartChapter &amp; &quot; : &quot; &amp; strStartVerse
			strLastReference = &quot; &quot; &amp; strEndChapter &amp; &quot; : &quot; &amp; strEndVerse
		Else &apos;Genesis 1:1 Genesis 1:15
			strFirstReference = strStartBook &amp; &quot; &quot; &amp; strStartChapter &amp; &quot; : &quot; &amp; strStartVerse
			strLastReference = &quot; &quot; &amp; strEndBook &amp; &quot; &quot; &amp; strEndChapter &amp; &quot; : &quot; &amp; strEndVerse
		End If
	Else
        If ReferenceFormat = &quot;Genesis 1, 2&quot; Or ReferenceFormat = &quot;Genesis 1&quot; Then
        	If strStartBook = strEndBook Then
				strFirstReference = strStartBook &amp; &quot; &quot;
				If strPrevStartChapter &lt;&gt; strStartChapter Then
					If strStartVerse &lt;&gt; 1 Then
						strFirstReference = strFirstReference &amp; strPrevStartChapter &amp; &quot;, &quot;
					End If
				End If
				strFirstReference = strFirstReference &amp; strStartChapter
					
				If strStartChapter &lt;&gt; strEndChapter Then
					strFirstReference = strFirstReference &amp; &quot;, &quot; &amp; strEndChapter
				End If	
				strLastReference = strEndBook &amp; &quot; &quot; &amp; 	strEndChapter
			Else
				strFirstReference = strStartBook &amp; &quot; &quot;
				If strPrevStartChapter &lt;&gt; strStartChapter And strPrevStartChapter &lt; strStartChapter  Then
					strFirstReference = strFirstReference &amp; strPrevStartChapter &amp; &quot;, &quot;
				ElseIf strPrevStartChapter &lt;&gt; strStartChapter And strPrevStartChapter &gt;= strStartChapter  Then
					strFirstReference = strFirstReference &amp; strPrevStartChapter
				End If
				
				If  strPrevStartChapter &lt; strStartChapter Then
					strFirstReference = strFirstReference &amp; strStartChapter
				End If
				
				strLastReference = strEndBook &amp; &quot; ,&quot; &amp; 	strEndChapter
	
			End If
			
		End If
		
	End If
	&apos;Msgbox strReference
	
	&apos;HiddenParagraph(page-1) = page-1 &amp; &quot;`~&quot; &amp; strReference

	HiddenParagraph(page-1,0) = page-1 &amp; &quot;`~&quot; &amp; strLastReference
	HiddenParagraph(page-1,1) = page-1 &amp; &quot;`~&quot; &amp; strFirstReference
    				
	strPrevStartChapter = strEndChapter
	strStartBook = strEndBook
	Else
		FirstPageBook(strStartBook)
		strEndBook = strStartBook
	End If	
Loop While oVC.jumpToNextPage 
    keep = keep &amp; chr(10) &amp; &quot;After Main &quot; &amp; chr(10) &amp; mytime &amp; chr(10) &amp; now
    mytime= now
    
    InsertReference(HiddenParagraph,PageCount)
    oProgressBarModel.ProgressValue = PageCount * 4

    keep = keep &amp; chr(10) &amp; &quot;After Print &quot; &amp; chr(10) &amp; mytime &amp; chr(10) &amp; now
    &apos;msgbox keep
	oDoc.store() 
&apos;===========Progressbar
	CloseProgressBar
	isProgressClosed = True
&apos;===========Progressbar  	
	&apos;AutoSaveEnableDisable(true)&apos;enable the &quot;Auto Recovery&quot;
		
	oContWindow.Visible = true 
Exit Sub
MyError:
	If isProgressClosed = False Then
		CloseProgressBar
	End If
	If Err &lt;&gt; 1 Then
		Msgbox &quot;Sorry! Could not update the References.&quot; , 0 + 64,  &quot;Update References&quot;
	End IF
	oContWindow.Visible = true 
End Sub

&apos;This procedure dispose the ProgressBar
Sub CloseProgressBar
  oSubWindow.setVisible(False) 
  oFrame.getFrames().remove(oSubFrame) 
  oSubWindow.dispose() 
End Sub

&apos;This function returns Page Number of given Paragraph
Function pageNo(par)
	Dim cont, vc, st
	st = par.getStart()
	cont = ThisComponent.getCurrentController()
	cont.select(st)
	vc = cont.getViewCursor()
	pageNo = vc.getPage()
End Function

&apos;This procedure finds and assigns the Book Name If Book Name is available in First Page
Sub FirstPageBook(strStartBook)
	oTextElementEnum = ThisComponent.getText().createEnumeration() 
 	While oTextElementEnum.hasMoreElements() 
 		oTextElement = oTextElementEnum.nextElement
 		CurPageNo = pageNo(oTextElement)
 		If CurPageNo &gt; 1 Then
 			Exit Sub
 		End If
    	If oTextElement.supportsService(&quot;com.sun.star.text.Paragraph&quot;) then
    		If LCase(Trim(oTextElement.ParaStyleName)) = &quot;scrbook_scrbody&quot; Then&apos;titlemain_scrbook
    		    oParaEnume = oTextElement.createEnumeration()
    			While oParaEnume.hasMoreElements()
			    	oPortion = oParaEnume.nextElement() 
			    	If InStr(Lcase(oPortion.CharStyleName) , &quot;scrBookName&quot;) &gt; 0 Then&apos;titlemain_scrbook
			    		strStartBook = oPortion.String
			    		Exit Sub
			    	End If
    			Wend
    			&apos;strStartBook = oTextElement.String
    			&apos;Exit Sub
    		End If
    	End If
    Wend	
End Sub

&apos;This procedure Insert Reference as Hidden Paragraph
Sub InsertReference(HiddenParagraph,PageCount) 
ThisComponent.currentController.getViewCursor().jumpToPage(2)
oDoc = ThisComponent 
oVC = oDoc.CurrentController.getViewCursor 
oVC.gotoStart(false) 
PageCount = TotalPages

Do 

		&apos;=========Progressbar    
			ProgressValue=ProgressValue+1
			MyProgressBar(ProgressValue)
		&apos;=========Progressbar
		
	page = oVC.getPage
	if PageCount = page then
		Exit Do
	End If	
	oVC.jumpToEndOfPage

		paraTextPageNo = split(HiddenParagraph(page,0),&quot;`~&quot;)
        If UBound(paraTextPageNo) = 1 Then
			&apos;For Last Reference
	    	paraPos = val(paraTextPageNo(0)) 
			paraText = paraTextPageNo(1)
			paraStyle = LASTGUIDESTYLE
			&apos;InsertGuide(paraText,paraPos,paraStyle)
	        	
			&apos;For First Reference
			paraTextPageNo = split(HiddenParagraph(page,1),&quot;`~&quot;)
			paraPos1 = val(paraTextPageNo(0)) 
			paraText1 = paraTextPageNo(1)
			paraStyle1 = FIRSTGUIDESTYLE
			&apos;InsertGuide(paraText1,paraPos1,paraStyle1)
			
			If LastParagraph(page -1) = LastParagraph(page) Then
				InsertGuide(paraText1,paraPos1,paraStyle1)
				InsertGuide(paraText,paraPos,paraStyle)
			Else
				InsertGuide(paraText,0,paraStyle)
				Currpage = oVC.getPage
				If Currpage &lt;&gt; page Then
					ThisComponent.currentController.getViewCursor().jumpToPage(page)
					oVC.jumpToEndOfPage	
				End If				
				InsertGuide(paraText1,0,paraStyle1)
			End If
		End If
		
		Currpage = oVC.getPage
		If Currpage &lt;&gt; page Then
			ThisComponent.currentController.getViewCursor().jumpToPage(page)	
		End If
Loop While oVC.jumpToNextPage 	 
End Sub

&apos;This Procedure loops the page in ASC order and get the First Chapter/Verse by using ReturnReferenceVerse/ReturnReferenceChapter
Sub GetReferenceASC(MyParagraph,PageNo,RefVariable,Source)
		Do
		  	MyParagraph.gotoEndOfParagraph(true) 
		  	If Source = &quot;V&quot; Then
			  	RefVariable = ReturnReferenceVerse(MyParagraph,&quot;ASC&quot;)
		  	ElseIf Source = &quot;C&quot; Then
			  	RefVariable = ReturnReferenceChapter(MyParagraph)
			ElseIf Source = &quot;B&quot; Then
				RefVariable = ReturnReferenceBook(MyParagraph)
		  	End If
		  	If Len(Trim(RefVariable)) &gt; 0 Then
		  		Exit Do
		  	End If
		  	If Left(MyParagraph.String,16) = Left(LastParagraph(PageNo),16) Then
				Exit Do
		  	End If
		Loop While MyParagraph.gotoNextParagraph(false)
End Sub

&apos;This Procedure loops the page in DESC order and get the Last Chapter/Verse by using ReturnReferenceVerse/ReturnReferenceChapter
Sub GetReferenceDESC(ByVal MyParagraph,PageNo,RefVariable,Source)
		Do
			MyParagraph.gotoStartOfParagraph(true)
		  	If Source = &quot;V&quot; Then
			  	RefVariable = ReturnReferenceVerse(MyParagraph,&quot;DESC&quot;)
		  	ElseIf Source = &quot;C&quot; Then
			  	RefVariable = ReturnReferenceChapter(MyParagraph)
		  	End If
		  	If Len(Trim(RefVariable)) &gt; 0 Then
		  		Exit Do
		  	End If
		  	&apos;If MyParagraph.String = strFirstParagraph.String Then
				&apos;Exit Do
		  	&apos;End If

		Loop While MyParagraph.gotoPreviousParagraph(true)	  	
End Sub

&apos;This Procedure loops the given Paragraph and find the Verse
Function ReturnReferenceVerse(MyParagraph,Direction)
	oParaEnume = MyParagraph.createEnumeration() 
	While oParaEnume.hasMoreElements() 
	 	oPara = oParaEnume.nextElement() 
		&apos;enumeration for portions in the paragraph 
	  	oPortionEnume = oPara.createEnumeration() 
	  	While oPortionEnume.hasMoreElements() 
	    	oPortion = oPortionEnume.nextElement() 
	    	If Len(Trim(oPortion.CharStyleName)) &gt; 10 And Len(Trim(oPortion.String)) &gt; 0 Then
		    	&apos;If InStr(Trim(RefStyleName),oPortion.CharStyleName) &gt; 0 Then
		    	&apos;If Len(Trim(oPortion.CharStyleName)) &gt; 10 Then
			    	If Mid(Lcase(Trim(oPortion.CharStyleName)),1,11) = &quot;versenumber&quot; Then
			    		ReturnReferenceVerse = oPortion.String
			    		If Direction = &quot;ASC&quot; Then
				    		Exit Function
			    		End If
			    	End If
		    	&apos;End If
		    End If	
	  	WEnd 
	WEnd	
End Function

&apos;This Procedure loops the given Paragraph and find the Chapter
Function ReturnReferenceChapter(MyParagraph)
	oParaEnume = MyParagraph.createEnumeration() 
	While oParaEnume.hasMoreElements() 
	 	oPara = oParaEnume.nextElement() 
		&apos;enumeration for portions in the paragraph 
	  	oPortionEnume = oPara.createEnumeration() 
	  	While oPortionEnume.hasMoreElements() 
	    	oPortion = oPortionEnume.nextElement() 
	    	&apos;If Len(Trim(oPortion.CharStyleName)) &gt; 0 And Len(Trim(oPortion.String)) &gt; 0 Then
	    	If Len(Trim(oPortion.CharStyleName)) &gt; 12 And Len(Trim(oPortion.String)) &gt; 0 Then
		    	If Mid(Lcase(Trim(oPortion.CharStyleName)),1,13) = &quot;chapternumber&quot; Then
			    	&apos;If InStr(Trim(RefStyleName),oPortion.CharStyleName) &gt; 0 Then
			    		ReturnReferenceChapter = oPortion.String
			    	&apos;End If
			    	Exit Function
			    End If
		    End If	
	  	WEnd 
	WEnd	
End Function

&apos;This Procedure loops the given Paragraph and find the Book
Function ReturnReferenceBook(MyParagraph)
	oParaEnume = MyParagraph.createEnumeration() 
	While oParaEnume.hasMoreElements() 
	 	oPara = oParaEnume.nextElement() 
	 	If LCase(Trim(oPara.ParaStyleName)) = &quot;scrbook_scrbody&quot; Then&apos;titlemain_scrbook
			&apos;enumeration for portions in the paragraph 
		  	oPortionEnume = oPara.createEnumeration() 
		  	While oPortionEnume.hasMoreElements() 
		    	oPortion = oPortionEnume.nextElement() 
		    	If InStr(Lcase(oPortion.CharStyleName) , &quot;scrBookName&quot;) &gt; 0 Then&apos;titlemain_scrbook
		    		ReturnReferenceBook = oPortion.String
		    		Exit Function
		    	End If
		  	WEnd 
	  	End If
	WEnd	
End Function


&apos;This Procedure loops the page and store the last paragraph in Array
Sub GetLastParagraph
On Error GoTo MyError:
&apos;Picture
	dim document   as object
	dim dispatcher as object
	document = ThisComponent.CurrentController.Frame 
	dispatcher = createUnoService(&quot;com.sun.star.frame.DispatchHelper&quot;) 
	
	ThisComponent.currentController.getViewCursor().jumpToPage(2)
oDoc = ThisComponent 
oVC = oDoc.CurrentController.getViewCursor 
oVC.gotoStart(false) 
Do 

		&apos;=========Progressbar    
			ProgressValue=ProgressValue+1
			MyProgressBar(ProgressValue)
		&apos;=========Progressbar 
		
	page = oVC.getPage

	oVC.jumpToEndOfPage 
	Last = oDoc.Text.createTextCursorByRange(oVC) 
	
	Last.gotoStartOfParagraph(true)
	&apos;Last.gotoEndOfParagraph(false)

	differ=oVC.getPage 

  	if differ &gt; page Then
	  	dispatcher.executeDispatch(document, &quot;.uno:GoToPrevPara&quot;, &quot;&quot;, 0, Array()) 
	  	dispatcher.executeDispatch(document, &quot;.uno:InsertPara&quot;, &quot;&quot;, 0, Array()) 	  	
	  	dispatcher.executeDispatch(document, &quot;.uno:GoToPrevPara&quot;, &quot;&quot;, 0, Array()) 
		Last = oDoc.Text.createTextCursorByRange(oVC)
		Last.gotoStartOfParagraph(false)
		Last.gotoEndOfParagraph(true)
	end if
	LastParagraph(page) = Last.String
Loop While oVC.jumpToNextPage 	 

Exit sub
MyError:
s=0

End Sub


&apos;This procedure sets the dialgue to correct Update Reference 
Sub StartDontForget100

	&apos;Msgbox &quot;Please NOTE: Use the Update References menu item or tool bar item to correct the references before printing.&quot; , 0 + 64,  &quot;Reference Reminder&quot;
	if LCase(AutoMacro) = &quot;true&quot; Then
		If IsMacroRun = false Then
			SetReference
		End If
	else
		dim clicked as byte
		clicked = msgbox (&quot;Headers are updated to contain the first and last book, chapter and / or verse with the &quot; + &quot;&quot;&quot;&quot; + &quot;Update References&quot; + &quot;&quot;&quot;&quot; + &quot; tool bar item or Macro menu item.&quot; &amp; chr(10) &amp; &quot;Would you like to update the headers now?&quot;, 4 + 32 + 256 , &quot;Reference Reminder&quot;)
		If clicked = 6 Then &apos;If Yes clicked
			If IsMacroRun = false Then
				SetReference
			End If
		End If
	End If
	
	If Lcase(OutputFormat) &lt;&gt; &quot;odt&quot; Then
		ExportToDOC_PDF
	End IF
End Sub

&apos;This procedure sets the dialgue to confirm user to correction of Update Reference while Printing
Sub IsReferenceCorrected
	dim clicked as byte
	clicked = msgbox ( &quot;If you have not corrected the references yet, you can correct them now.&quot; &amp; chr(10) &amp; &quot;Would you like to correct the references?&quot;, 4 + 32 + 256 , &quot;Reference Reminder&quot;)
	If clicked = 6 Then &apos;If Yes clicked
		SetReference
	End If
End Sub

&apos;This function gives the Total Pages of the current file
Function TotalPages()
	Dim cont
	cont = ThisComponent.getCurrentController()
	TotalPages = cont.PageCount
End Function

&apos;Insert the first or last Reference in given Position by using move and InsertPara Procedures.
Sub InsertGuide(par,pos,style)
	Dim guide as String
	guide =  par
	move(pos,style)
   	InsertPara(guide, style)
End Sub        

&apos;This procedure creats the empty paragraph to insert hidden paragraphs(References)
Sub move(pos,style)
	dim document   as object
	dim dispatcher as object
	document = ThisComponent.CurrentController.Frame 
	dispatcher = createUnoService(&quot;com.sun.star.frame.DispatchHelper&quot;) 
	If pos = 0 Then
	    dispatcher.executeDispatch(document, &quot;.uno:GotoStartOfPara&quot;, &quot;&quot;, 0, Array())
		&apos;dispatcher.executeDispatch(document, &quot;.uno:GoUp&quot;, &quot;&quot;, 0, Array())     
		dispatcher.executeDispatch(document, &quot;.uno:GoUp&quot;, &quot;&quot;, 0, Array())     
	    dispatcher.executeDispatch(document, &quot;.uno:GotoEndOfPara&quot;, &quot;&quot;, 0, Array()) 
		dispatcher.executeDispatch(document, &quot;.uno:InsertPara&quot;, &quot;&quot;, 0, Array())
	Else &apos;If Page had no new paragraphs, this code will be executed
		If style = &quot;GuideL&quot; Then
			ThisComponent.currentController.getViewCursor().jumpToPage(pos)
			dispatcher.executeDispatch(document, &quot;.uno:GoDown&quot;, &quot;&quot;, 0, Array()) 
			dispatcher.executeDispatch(document, &quot;.uno:InsertPara&quot;, &quot;&quot;, 0, Array())
			dispatcher.executeDispatch(document, &quot;.uno:InsertPara&quot;, &quot;&quot;, 0, Array())

			dim args1(0) as new com.sun.star.beans.PropertyValue
			args1(0).Name = &quot;Text&quot;
			args1(0).Value = CHR$(9)
			dispatcher.executeDispatch(document, &quot;.uno:InsertText&quot;, &quot;&quot;, 0, args1())			
		Else
			dispatcher.executeDispatch(document, &quot;.uno:GoToStartOfLine&quot;, &quot;&quot;, 0, Array())
			dispatcher.executeDispatch(document, &quot;.uno:InsertPara&quot;, &quot;&quot;, 0, Array())
		End If
		
		dispatcher.executeDispatch(document, &quot;.uno:GoUp&quot;, &quot;&quot;, 0, Array()) 

	End If
End Sub

&apos;This procedure inserts the first or last Reference
Sub InsertPara(guide, style)
	dim document   as object
	dim dispatcher as object
	document   = ThisComponent.CurrentController.Frame
	dispatcher = createUnoService(&quot;com.sun.star.frame.DispatchHelper&quot;)

	dim args1(0) as new com.sun.star.beans.PropertyValue
	args1(0).Name = &quot;Text&quot;
	args1(0).Value = guide 
	dispatcher.executeDispatch(document, &quot;.uno:InsertText&quot;, &quot;&quot;, 0, args1())

	dim args2(1) as new com.sun.star.beans.PropertyValue
	args2(0).Name = &quot;Template&quot;
	args2(0).Value = style&apos; &amp; &quot;D&quot;
	args2(1).Name = &quot;Family&quot; 
	args2(1).Value = 2 
	dispatcher.executeDispatch(document, &quot;.uno:StyleApply&quot;, &quot;&quot;, 0, args2())
End Sub


&apos;This procedure removes existing hidden References
Sub RemoveOldGuides
	Dim oParEnum           &apos;Paragraph enumerator 
	Dim oPar               &apos;Current paragraph 
	oParEnum = ThisComponent.Text.createEnumeration() 
	Do While oParEnum.hasMoreElements()
	
		&apos;=========Progressbar    
  
		&apos;i=i+1
		&apos;MyProgressBar(i)

		&apos;=========Progressbar  	
		 
		oPar = oParEnum.nextElement() 
		If oPar.supportsService(&quot;com.sun.star.text.Paragraph&quot;) Then 
			If InStr(oPar.ParaStyleName, &quot;Guide&quot;) &gt; 0 Then 
			    &apos;oPar.Anchor.ParaStyleName = ENTRYPARASTYLE
				ThisComponent.Text.removeTextContent(oPar) 
			End If 
		End If 
	Loop
End Sub

&apos;This procedure push the Section Header and Parallel_Passage_Reference, if letter found in last paragraph of the current page.
Sub KeepNextParagraph 
On Error GoTo MyError:
Dim OldPage, StyleFirstName
OldPage = 0
	ThisComponent.currentController.getViewCursor().jumpToPage(2)
oDoc = ThisComponent 
oVC = oDoc.CurrentController.getViewCursor 
oVC.gotoStart(false) 
Do 

		&apos;=========Progressbar    
			ProgressValue=ProgressValue+1
			MyProgressBar(ProgressValue)
		&apos;=========Progressbar  	
		
	page = oVC.getPage
	if page = OldPage Then 
		Exit sub
	End If	
	oVC.jumpToEndOfPage 

	Last = oDoc.Text.createTextCursorByRange(oVC) 
	Last.gotoStartOfParagraph(false)
	Last.gotoEndOfParagraph(true) 
	&apos;LastParagraph(page) = Last.String

	&apos;If Len(Trim(Last.String)) &gt; 0 Then
		StyleFirstName = GetStyleName(LCase(Last.ParaStyleName))
		If StyleFirstName = &quot;sectionhead&quot; Or StyleFirstName = &quot;parallelpassagereference&quot; Then
			Call PushToNextPage(StyleFirstName)
			&apos;if page = 46 then
				If StyleFirstName = &quot;parallelpassagereference&quot; Then
					oVC.jumpToEndOfPage 
					Last = oDoc.Text.createTextCursorByRange(oVC) 
					Last.gotoStartOfParagraph(false)
					Last.gotoEndOfParagraph(true) 
					StyleFirstName = GetStyleName(LCase(Last.ParaStyleName))
					If StyleFirstName = &quot;sectionhead&quot; Then
						Call PushToNextPage(StyleFirstName)
					End If
				End IF
			&apos;end if			
			ThisComponent.currentController.getViewCursor().jumpToPage(page)
		End If
	&apos;End If	
	OldPage = page
Loop While oVC.jumpToNextPage 

Exit Sub
MyError:
	&apos;Msgbox &quot;Sorry! Could not update the Guide Words.&quot; , 0 + 64,  &quot;Update Reference&quot;	 
End Sub

&apos;This procedure called from KeepNextParagraph
Sub PushToNextPage(StyleFirstName)
	document   = ThisComponent.CurrentController.Frame
	dispatcher = createUnoService(&quot;com.sun.star.frame.DispatchHelper&quot;)
	
	If StyleFirstName = &quot;parallelpassagereference&quot; Then
		dispatcher.executeDispatch(document, &quot;.uno:GoToPrevPara&quot;, &quot;&quot;, 0, Array())
	Else
		dispatcher.executeDispatch(document, &quot;.uno:GotoStartOfPara&quot;, &quot;&quot;, 0, Array())
	End If
	
	dispatcher.executeDispatch(document, &quot;.uno:InsertPara&quot;, &quot;&quot;, 0, Array())
	&apos;If StyleFirstName = &quot;parallelpassagereference&quot; Then
		&apos;dispatcher.executeDispatch(document, &quot;.uno:InsertPara&quot;, &quot;&quot;, 0, Array())
	&apos;End If	
End Sub

&apos;This function returns first styleName from the StylesTree (entry~letData)
Function GetStyleName(StylesTree)
	Dim arrStyles
	arrStyles = split(StylesTree,&quot;_&quot;)
	If(Ubound(arrStyles) &gt; 0) Then
		GetStyleName = arrStyles(0)
	Else
		GetStyleName = &quot;&quot;
	End If
End Function

Sub ShowProcessingDialog123() 
  oDoc = ThisComponent &apos; needs document 
  oController = oDoc.getCurrentController() 
  oFrame = oController.getFrame() 
  oContainerWindow = oFrame.ContainerWindow 
  oToolkit = oContainerWindow.Toolkit 
  
  &apos; sub window with sub frame 
  oSubWindow = CreateNewWindow(oToolkit,oContainerWindow, 400,300,260,100) 
  oSubWindow.Title=&quot;Guidewords&quot;
  oSubFrame = CreateUnoService(&quot;com.sun.star.frame.Frame&quot;) 
  oSubFrame.initialize(oSubWindow) 
  oFrame.getFrames().append(oSubFrame) 
  
  &apos; container of controls (Frame)
  oContainer = CreateUnoService(&quot;com.sun.star.awt.UnoControlContainer&quot;) 
  oContainerModel = CreateUnoService(&quot;com.sun.star.awt.UnoControlContainerModel&quot;) 
  oContainerModel.BackgroundColor = &quot;&amp;HEEEEEE&quot; &apos;-1 
  oContainer.setModel(oContainerModel) 
  oContainer.setPosSize(0,0,260,100,com.sun.star.awt.PosSize.POSSIZE) 
  oContainer.createPeer(oToolkit,oSubWindow) 
  
  &apos; progressbar 
  oProgressBarModel = CreateUnoService(&quot;com.sun.star.awt.UnoControlProgressBarModel&quot;) 
  oProgressBar = CreateUnoService( &quot;com.sun.star.awt.UnoControlProgressBar&quot; ) 
  oProgressBar.setModel(oProgressBarModel) 
  oProgressBar.setPosSize(39,50,180,20, com.sun.star.awt.PosSize.POSSIZE ) 
  oContainer.addControl(&quot;progressbar&quot;,oProgressBar) 
  
  &apos; label 
  oLabel = CreateUnoService(&quot;com.sun.star.awt.UnoControlFixedText&quot;) 
  oLabelModel = CreateUnoService(&quot;com.sun.star.awt.UnoControlFixedTextModel&quot;) 
  oLabelModel.Label = &quot;Macro is updating guidewords ...&quot; 
&apos;  oLabelModel.Color = &quot;red&quot; &apos;-1 
  oLabel.setModel(oLabelModel) 
  oLabel.setPosSize(50,20,180,30,com.sun.star.awt.PosSize.POSSIZE) 
  oContainer.addControl(&quot;label&quot;,oLabel) 
  
  &apos; show window 
  oSubWindow.setEnable(False) 
  oSubWindow.setVisible(True) 
  
  &apos; process something 
  Processing(oDoc) 



  oSubWindow.setVisible(False) 
  oFrame.getFrames().remove(oSubFrame) 
  
  oSubWindow.dispose() 
End Sub 
</script:module>