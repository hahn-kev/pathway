% W32TeX texmf.cnf 
% What follows is a super-summary of what this .cnf file can
% contain. Please read the Kpathsea manual for more information.
% 
% texmf.cnf is generated from texmf.in, by replacing @var@ with the
% value of the Make variable `var', via a sed file texmf.sed, generated
% (once) by kpathsea/Makefile.
% 
% Any identifier (sticking to A-Za-z_ for names is safest) can be assigned.
% The `=' (and surrounding spaces) is optional.
% No % or @ in texmf.in, for the sake of autogeneration.
% (However, %'s and @'s can be edited into texmf.cnf or put in envvar values.)
% $foo (or ${foo}) in a value expands to the envvar or cnf value of foo.
% 
% Earlier entries (in the same or another file) override later ones, and
% an environment variable foo overrides any texmf.cnf definition of foo.
% 
% All definitions are read before anything is expanded, so you can use
% variables before they are defined. 
% 
% If a variable assignment is qualified with `.PROGRAM', it is ignored
% unless the current executable (last filename component of argv[0]) is
% named PROGRAM.  This foo.PROGRAM construct is not recognized on the
% right-hand side. For environment variables, use FOO_PROGRAM.
% 
% Which file formats use which paths for searches is described in the
% various programs' and the kpathsea documentation.
% 
% // means to search subdirectories (recursively).
% A leading !! means to look only in the ls-R db, never on the disk.
% A leading/trailing/doubled ; in the paths will be expanded into the
%   compile-time default. Probably not what you want.
% 
% You can use brace notation, for example: /usr/local/{mytex:othertex}
% expands to /usr/local/mytex:/usr/local/othertex.  Instead of the path
% separator you can use a comma: /usr/local/{mytex,othertex} also expands
% to /usr/local/mytex:/usr/local/othertex.  However, the use of the comma
% instead of the path separator is deprecated.
%
% The text above assumes thet path separator is a colon (:).  Non-UNIX
% systems use different path separators, like the semicolon (;).

%  Part 1: Search paths and directories.

% You can set an environment variable to override TEXMF if you're testing
% a new TeX tree, without changing anything else.
% 
% You may wish to use one of the $SELFAUTO... variables here so TeX will
% find where to look dynamically.  See the manual and the definition
% below of TEXMFCNF.

% The main tree, which must be mentioned in $TEXMF, below:
TEXMFMAIN = $SELFAUTODIR/share/texmf

% A place for local additions to a "standard" texmf tree.  For example:
TEXMFLOCAL = $SELFAUTODIR/share/texmf-local

% The main distribution tree:
TEXMFDIST = $SELFAUTODIR/share/texmf-dist

% Var tree:
% TEXMFVAR = $SELFAUTODIR/share/texmf-var

% User texmf trees can be catered for like this...
TEXMFHOME = $HOME/texmf

% Now, list all the texmf trees. If you have multiple trees you can
% use shell brace notation, like this:
% TEXMF = {$TEXMFLOCAL,$TEXMFMAIN,$TEXMFDIST}
% The braces are necessary.  If you set TEXMFVAR and/or TEXMFHOME, you can also
% list $TEXMFVAR and/or $TEXMFHOME in the TEXMF definition.
%

%
% If we use TEXMFVAR
%
% TEXMF = {$TEXMFVAR,$TEXMFLOCAL,$TEXMFMAIN}
%
TEXMF = {$TEXMFLOCAL,$TEXMFMAIN}

% The system trees.  These are the trees that are shared by all the users.
SYSTEXMF = $TEXMF

% Where generated fonts may be written.  This tree is used when the sources
% were found in a system tree and either that tree wasn't writable, or the
% varfonts feature was enabled in MT_FEATURES in mktex.cnf.
VARTEXFONTS = c:/var/tex/fonts

% Where to look for ls-R files.  There need not be an ls-R in the
% directories in this path, but if there is one, Kpathsea will use it.
%
% Remove $VARTEXFONTS from TEXMFDBS if the VARTEXFONTS directory is below
% one of the TEXMF directories (avoids overlapping ls-R files).
TEXMFDBS = $TEXMF;$MAKETEXPK_TOP_DIR

% It may be convenient to define TEXMF like this:
%   TEXMF = {$TEXMFHOME,!!$TEXMFLOCAL,!!$TEXMFMAIN,$HOME}
% which allows users to set up entire texmf trees, and tells TeX to
% look in places like ~/tex and ~/bibtex.  If you do this, define TEXMFDBS
% like this:
%   TEXMFDBS = $TEXMFHOME;$TEXMFLOCAL;$TEXMFMAIN;$VARTEXFONTS
% or mktexlsr will generate an ls-R file for $HOME when called, which is
% rarely desirable.  If you do this you'll want to define SYSTEXMF like
% this:
%   SYSTEXMF = $TEXMFLOCAL;$TEXMFMAIN
% so that fonts from a user's tree won't escape into the global trees.
%
% On some systems, there will be a system tree which contains all the font
% files that may be created as well as the formats.  For example
%   TEXMFVAR = /var/lib/texmf
% is used on many Linux systems.  In this case, set VARTEXFONTS like this
%   VARTEXFONTS = $TEXMFVAR/fonts
% and do not mention it in TEXMFDBS (but _do_ mention TEXMFVAR).

%
% ConTeXt
%
TEXMFCACHE = $TEMP;$TMP;$TMPDIR;$HOME;$TEXMFVAR;.
FONTCIDMAPS = .;$TEXMF/fonts/cidmap//

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Usually you will not need to edit any of the other variables in part 1. %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% WEB2C is for Web2C specific files.  The current directory may not be
% a good place to look for them.
WEB2C = $TEXMF/web2c

% TEXINPUTS is for TeX input files -- i.e., anything to be found by \input
% or \openin, including .sty, .eps, etc. 

texroot = $TEXMF/tex
srcinp = $TEXMF/source//

% LaTeX 2.09
TEXINPUTS.alatex209 = .;$texroot/{alatex209,platex209,jlatex209,latex209,}//;$srcinp
TEXINPUTS.latex209 = .;$texroot/{latex209,platex209,jlatex209,}//;$srcinp
TEXINPUTS.platex209 = .;$texroot/{platex209,jlatex209,latex209,}//;$srcinp
TEXINPUTS.qlatex209 = .;$texroot/{platex209,jlatex209,latex209,}//;$srcinp
TEXINPUTS.lmj209 = .;$texroot/{lambda209,latex209,platex209,jlatex209,}//;$srcinp
TEXINPUTS.jlatex209 = .;$texroot/{jlatex209,platex209,latex209,}//;$srcinp

%
% LaTeX2e
TEXINPUTS.platex = .;$texroot/{platex,latex,generic,platex209,latex209,}//;$srcinp
TEXINPUTS.eplatex = .;$texroot/{platex,latex,generic,platex209,latex209,}//;$srcinp
TEXINPUTS.uplatex = .;$texroot/{uplatex,platex,latex,generic,platex209,latex209,}//;$srcinp
TEXINPUTS.euplatex = .;$texroot/{uplatex,platex,latex,generic,platex209,latex209,}//;$srcinp
TEXINPUTS.latex = .;$texroot/{latex,generic,latex209,platex209,}//;$srcinp
TEXINPUTS.pdflatex = .;$texroot/{latex,generic,latex209,platex209,}//;$srcinp
TEXINPUTS.pdfelatex = .;$texroot/{latex,generic,latex209,platex209,}//;$srcinp
TEXINPUTS.pdfxmltex = .;$texroot/{latex,generic,latex209,platex209,}//;$srcinp
TEXINPUTS.xelatex = .;$texroot/{xelatex,generic,latex,latex209,platex209,}//;$srcinp
TEXINPUTS.jlatex = .;$texroot/{jlatex,latex,generic,jlatex209,latex209,}//;$srcinp

%
% Fontinst needs to read afm files.
TEXINPUTS.fontinst = .;$TEXMF/{tex,fonts/afm}//;$srcinp

% Plain TeX.  Have the command tex check all directories as a last
% resort, we may have plain-compatible stuff anywhere.
TEXINPUTS.tex = .;$texroot/{plain,generic,platex209,latex209,}//;$srcinp
% other plain-based formats
TEXINPUTS.ptex = .;$texroot/{plain,platex209,latex209,}//;$srcinp
TEXINPUTS.eptex = .;$texroot/{plain,platex209,latex209,}//;$srcinp
TEXINPUTS.uptex = .;$texroot/{plain,platex209,latex209,}//;$srcinp
TEXINPUTS.euptex = .;$texroot/{plain,platex209,latex209,}//;$srcinp
TEXINPUTS.ptexold = .;$texroot/{plain,platex209,latex209,}//;$srcinp
TEXINPUTS.pdftex = .;$texroot/{plain,generic,platex209,latex209,}//;$srcinp
TEXINPUTS.pdfetex = .;$texroot/{plain,generic,platex209,latex209,}//;$srcinp
TEXINPUTS.xetex = .;$texroot/{plain,generic,platex209,latex209,}//;$srcinp
TEXINPUTS.texsis = .;$texroot/{texsis,plain,generic,platex209,latex209,}//;$srcinp
TEXINPUTS.ptexsis = .;$texroot/{texsis,plain,generic,platex209,latex209,}//;$srcinp
TEXINPUTS.amstex = .;$texroot/{plain,generic,platex209,latex209,}//;$srcinp
TEXINPUTS.ftex = .;$texroot/{formate,plain,generic,}//;$srcinp
TEXINPUTS.texinfo = .;$texroot/{texinfo,plain,generic,}//;$srcinp
TEXINPUTS.eplain  = .;$texroot/{eplain,plain,generic,}//;$srcinp
TEXINPUTS.jadetex = .;$texroot/{jadetex,plain,generic,}//;$srcinp
TEXINPUTS.pdfjadetex = .;$texroot/{jadetex,plain,generic,}//;$srcinp
TEXINPUTS.pdftexinfo = .;$texroot/{texinfo,generic,plain,}//;$srcinp
TEXINPUTS.luatex = .;$texroot/{texinfo,generic,plain,}//;$srcinp

% NTT JTeX
TEXINPUTS.jtex = .;$texroot/{plain,generic,latex209,platex209,}//;$srcinp

% e-TeX.  This form of the input paths is borrowed from teTeX.  A certain
% variant of TDS is assumed here, unaffected by the build variables.
TEXINPUTS.elatex   = .;$texroot/{latex,generic,latex209,plain,}//;$srcinp
TEXINPUTS.etex     = .;$texroot/{plain,generic,}//;$srcinp

% MLTeX.
TEXINPUTS.frtex   = .;$texroot/{french,plain,generic,}//;$srcinp
TEXINPUTS.frlatex = .;$texroot/{french,latex,generic,latex209,}//;$srcinp
TEXINPUTS.mltex = .;$texroot/{plain,generic,}//;$srcinp
TEXINPUTS.mllatex = .;$texroot/{latex,generic,latex209,}//;$srcinp

% Omega.
TEXINPUTS.lambda = .;$texroot/{lambda,latex,generic,latex209,plain,}//;$srcinp
TEXINPUTS.lambdaj = .;$texroot/{lambda,latex,generic,latex209,plain,}//;$srcinp
TEXINPUTS.omega = .;$texroot/{plain,generic,}//;$srcinp
TEXINPUTS.omegaj = .;$texroot/{plain,generic,}//;$srcinp

% Aleph
TEXINPUTS.lamed = .;$texroot/{lambda,latex,generic,}//;$srcinp
TEXINPUTS.aleph = .;$texroot/{plain,generic,}//;$srcinp

% Context macros by Hans Hagen:
TEXINPUTS.context = .;$texroot/{context,plain,generic,}//;$srcinp
TEXINPUTS.mptopdf = .;$texroot/{context,plain,generic,}//;$srcinp

% Earlier entries override later ones, so put this last.
TEXINPUTS = .;$texroot/{generic,}//;$srcinp

% Metafont, MetaPost inputs.
MFINPUTS = .;$TEXMF/metafont//;{$TEXMF/fonts,$VARTEXFONTS}/source//
MPINPUTS = .;$TEXMF/metapost//

% MFT style files.
MFTINPUTS = .;$TEXMF/mft//

% Web and CWeb input paths.
WEBINPUTS = .;$TEXMF/web//
CWEBINPUTS = .;$TEXMF/cweb//

%
% in order not to expanded to nothing
%
engine = unsetengine
progname = unsetprogname

% Dump files (fmt/base/mem) for vir{tex,mf,mp} to read (see web2c/INSTALL),
% and string pools (.pool) for ini{tex,mf,mp}.  It is silly that we have six
% paths and directories here (they all resolve to a single place by default),
% but historically ...
TEXFORMATS = .;$TEXMF/web2c{/$engine,}
MFBASES = $TEXFORMATS
MPMEMS = $TEXFORMATS

% Virtual fonts
VFFONTS.pdftex = .;$TEXMF/fonts/vf//
VFFONTS.pdflatex = .;$TEXMF/fonts/vf//
VFFONTS.pdfetex = .;$TEXMF/fonts/vf//
VFFONTS.pdfelatex = .;$TEXMF/fonts/vf//
VFFONTS.pdfxtex = .;$TEXMF/fonts/vf//
VFFONTS.pdfxlatex = .;$TEXMF/fonts/vf//
VFFONTS.dvipng = .;$TEXMF/fonts/vf//
%
% default directory for virtual fonts
%
VFFONTS = .;$TEXMF/fonts/vf//
%
% to use unimin.tfm and unigoth.tfm for msmin??.tfm and msgoth??.tfm
%
%% VFFONTS = .;$TEXMF/fonts/{vf,extra/vf}//

% Device-independent font metric files.
TFMFONTS = .;{$TEXMF/fonts,$VARTEXFONTS}/tfm//

% The $MAKETEX_MODE below means the drivers will not use a cx font when
% the mode is ricoh.  If no mode is explicitly specified, kpse_prog_init
% sets MAKETEX_MODE to /, so all subdirectories are searched.  See the manual.
% The modeless part guarantees that bitmaps for PostScript fonts are found.
PKFONTS = .;{$TEXMF/fonts,$VARTEXFONTS}/pk/{$MAKETEX_MODE,modeless}//;$MAKETEXPK_TOP_DIR/pk/{$MAKETEX_MODE,modeless}//

% Similarly for the GF format, which only remains in existence because
% Metafont outputs it (and MF isn't going to change).
GFFONTS = .;$TEXMF/fonts/gf/$MAKETEX_MODE//

% A backup for PKFONTS and GFFONTS. Not used for anything.
GLYPHFONTS = .;$TEXMF/fonts

% For texfonts.map and included map files used by mktexpk.
% See ftp://ftp.tug.org/tex/fontname.tar.gz.
TEXFONTMAPS.dvipdfm = .;$TEXMF/fonts/map/{agl,dvipdfm,ps2pk,ttf2pk}//
TEXFONTMAPS.dvipdfmx = .;$TEXMF/fonts/map/{agl,dvipdfmx,dvipdfm,dvips,pdftex,ps2pk,ttf2pk}//
TEXFONTMAPS = .;$TEXMF/fonts/map/{agl,dvips,pdftex,ps2pk,ttf2pk}//

% BibTeX bibliographies and style files.
BIBINPUTS = .;$TEXMF/{bibtex,jbibtex}/{bib,}//
BSTINPUTS = .;$TEXMF/{bibtex,jbibtex}/{bst,}//


% PostScript headers, prologues (.pro), encodings (.enc) and fonts.
TEXPSHEADERS = .;$TEXMF/{fonts/{enc,type1,type42,type3},dvips}//
TEXPSHEADERS.gsftopk = .;$TEXMF/{fonts/{enc,type1,type42,type3,truetype},dvips}//

% PostScript Type 1 outline fonts.
T1FONTS = .;$TEXMF/fonts/type1//

% PostScript AFM metric files.
AFMFONTS = .;$TEXMF/fonts/afm//

% TrueType outline fonts.
SYSTTF = c:/{winnt,windows,winnt35}/fonts//
TTFONTS = .;$SYSTTF;$TEXMF/fonts/truetype//
TTF2PKINPUTS = .;$TEXMF/ttf2pk//
TTF2TFMINPUTS = .;$TEXMF/ttf2pk//

% Type 42 outline fonts.
T42FONTS = .;$TEXMF/fonts/type42//

% Ligature definition files.
LIGFONTS = .;$TEXMF/fonts/lig//

% A place to puth everything that doesn't fit the other font categories.
MISCFONTS = .;$TEXMF/fonts/misc//

% Dvips' config.* files (this name should not start with `TEX'!).
TEXCONFIG = $TEXMF/dvips//

% Makeindex style (.ist) files.
INDEXSTYLE = .;$TEXMF/makeindex//
INDEXDICTIONARY.mendex = .;$TEXMF/makeindex//
% Default style
% INDEXDEFAULTSTYLE = $TEXMF/makeindex/gind.ist
% Fixed dictionary
% INDEXDEFAULTDICTIONARY = $TEXMF/makeindex/dict/mendex.dict

% Font encoding files (.enc).
ENCFONTS = .;$TEXMF/fonts/enc//

% CMap files.
CMAPFONTS = .;$TEXMF/fonts/cmap//;c:/usr/Resource/CMap//

% Subfont definition files.
SFDFONTS = .;$TEXMF/fonts/sfd//

% Opentype outline fonts.
OPENTYPEFONTS = .;$TEXMF/fonts/opentype//

% Pdftex config files:
PDFTEXCONFIG = .;$TEXMF/pdftex/{$progname,}//

% Used by DMP (ditroff-to-mpx), called by makempx -troff.
% W32TeX uses groff
TRFONTS = c:/usr/local/lib/groff/font/devps//
MPSUPPORT = .;$TEXMF/metapost/support//

% For xdvi to find mime.types and .mailcap, if they do not exist in
% $HOME.  These are single directories, not paths.
% (But the default mime.types, at least, may well suffice.)
MIMELIBDIR = c:/usr/local/etc
MAILCAPLIBDIR = c:/usr/local/etc

% TeX documentation and source files, for use with kpsewhich.
TEXDOCS = .;$TEXMF/doc//
TEXSOURCES = .;$TEXMF/source//

% allow for compressed files, and various extenions
TEXDOCSSUFFIX =	;.pdf;.ps;.dvi;.html;.txt;.tex
TEXDOCSCOMPRESS = ;.gz;.bz2;.zip;.Z
TEXDOCEXT = {$TEXDOCSSUFFIX}{$TEXDOCSCOMPRESS}

% Omega-related fonts and other files.  The odd construction for OFMFONTS
% makes it behave in the face of a definition of TFMFONTS.  Unfortunately
% no default substitution would take place for TFMFONTS, so an explicit
% path is retained.
OFMFONTS = .;{$TEXMF/fonts,$VARTEXFONTS}/{ofm,tfm}//;$TFMFONTS
OPLFONTS = .;{$TEXMF/fonts,$VARTEXFONTS}/opl//
OVFFONTS = .;{$TEXMF/fonts,$VARTEXFONTS}/ovf//
OVPFONTS = .;{$TEXMF/fonts,$VARTEXFONTS}/ovp//
OTPINPUTS = .;$TEXMF/omega/otp//
OCPINPUTS = .;$TEXMF/omega/ocp//

% Some additional input variables for several programs.  If you add
% a program that uses the 'other text files' or 'other binary files'
% search formats, you'll want to add their variables here as well.

% t4ht utility, sharing files with TeX4ht
T4HTINPUTS   = .;$TEXMF{/tex,}/tex4ht//
TEX4HTINPUTS = .;$TEXMF{/tex,}/tex4ht//

% Lua needs to look in TEXINPUTS for lua scripts distributed with packages.
LUAINPUTS = .;$TEXMF/scripts/{$progname,$engine,}/lua//;$TEXINPUTS

% Part for scripts that are distributed/installed in the texmf tree.
TEXMFSCRIPTS = $TEXMF/scripts//

% pictures
TEXPICTS = .;$texroot/{generic,}//;$srcinp

%% The mktex* scripts rely on KPSE_DOT. Do not set it in the environment.
KPSE_DOT = .

% This definition isn't used from this .cnf file itself (that would be
% paradoxical), but the compile-time default in paths.h is built from it.
% The SELFAUTO* variables are set automatically from the location of
% argv[0], in kpse_set_progname.  
% 
% The TETEXDIR stuff isn't likely to relevant unless you're using teTeX,
% but it doesn't hurt.
%
% For security reasons, it is better not to have . part of the path.
% 
TEXMFCNF = {$SELFAUTOLOC,$SELFAUTODIR,$SELFAUTOPARENT}{,{/share,}/texmf{-local,}/web2c}

%
% editors
%
TEXEDIT = mule +%d "%s"
MFEDIT = mule +%d "%s"
MPEDIT = mule +%d "%s"

%  Part 2: Non-path options.

% Write .log/.dvi/etc. files here, if the current directory is unwritable.
% TEXMFOUTPUT = c:/temp

% If a dynamic file creation fails, log the command to this file, in
% either the current directory or TEXMFOUTPUT.  Set to the
% empty string or  0  to avoid logging.
MISSFONT_LOG = missfont.log

% Set to a colon-separated list of words specifying warnings to suppress.
% To suppress everything, use TEX_HUSH = all; this is currently equivalent to
% TEX_HUSH = checksum:lostchar:readable:special
% To suppress nothing, use TEX_HUSH = none or do not set the variable at all.
TEX_HUSH = none

% Enable system commands via \write18{...}?
shell_escape = f

% Allow TeX \openin, \openout, or \input on filenames starting with `.'
% (e.g., .rhosts) or outside the current tree (e.g., /etc/passwd)?
% a (any)        : any file can be opened.
% r (restricted) : disallow opening "dotfiles".
% p (paranoid)   : as 'r' and disallow going to parent directories, and
%                  restrict absolute paths to be under $TEXMFOUTPUT.
openout_any = p
openin_any = a

% Allow TeX, MF, and MP to parse the first line of an input file for
% the %&format construct.
parse_first_line = f

% Allow file-line-error-style
file_line_error_style = f

% default file code of JTeX
% These override the code specified by TeX command in dumping (making format).
jtex_filetype = sjis

% Enable the mktex... scripts by default?  These must be set to 0 or 1.
% Particular programs can and do override these settings, for example
% dvips's -M option.  Your first chance to specify whether the scripts
% are invoked by default is at configure time.
% 
% These values are ignored if the script names are changed; e.g., if you
% set DVIPSMAKEPK to `foo', what counts is the value of the environment
% variable/config value `FOO', not the `MKTEXPK' value.
% 
MKTEXTEX = 0
MKTEXPK = 1
MKTEXMF = 1
MKTEXTFM = 1
MKTEXFMT = 1
MKOCP = 0
MKOFM = 1

% What MetaPost runs to make MPX files.  This is passed an option -troff
% if MP is in troff mode.
%
MPXCOMMAND = makempx
MPXCOMMAND.jmpost = pmakempx
MPXCOMMAND.upjmpost = upmakempx
%
%
TEX = etex
%
% PTEX has a meaning only for pmakempx
%
PTEX = ptex
%
% options for TeX cannot be written in TEX or PTEX in W32TeX.
% they can be written in TEXOPTION variable
%
TEXOPTION =
%TEXOPTION = -kanji=euc -progname=platex
%
MPXMAINCMD = etex
PMPXMAINCMD = ptex

%  Part 3: Array and other sizes for TeX (and Metafont and MetaPost).
% 
% If you want to change some of these sizes only for a certain TeX
% variant, the usual dot notation works, e.g.,
% main_memory.hugetex = 20000000
% 
% If a change here appears to be ignored, try redumping the format file.

% Memory. Must be less than 8,000,000 total.
% 
% main_memory is relevant only to initex, extra_mem_* only to non-ini.
% Thus, have to redump the .fmt file after changing main_memory; to add
% to existing fmt files, increase extra_mem_*.  (To get an idea of how
% much, try \tracingstats=2 in your TeX source file;
% web2c/tests/memtest.tex might also be interesting.)
% 
% To increase space for boxes (as might be needed by, e.g., PiCTeX),
% increase extra_mem_bot.
% 
% For some xy-pic samples, you may need as much as 700000 words of memory.
% For the vast majority of documents, 60000 or less will do.
% 
main_memory = 1500000 % words of inimemory available; also applies to inimf&mp
extra_mem_top = 0     % extra high memory for chars, tokens, etc.
extra_mem_bot = 0     % extra low memory for boxes, glue, breakpoints, etc.

% ConTeXt is a memory hog...
extra_mem_top.context = 2000000
extra_mem_bot.context = 4000000
main_memory.context = 4000000
% omega
main_memory.omega = 4000000
main_memory.lambda = 4000000
main_memory.omegaj = 4000000
main_memory.lambdaj = 4000000

% Words of font info for TeX (total size of all TFM files, approximately). 
% Must be less than 4000000
font_mem_size = 2000000

% Total number of fonts. Must be >= 50 and <= 2000 (without tex.ch changes).
font_max = 2000

% Extra space for the hash table of control sequences (which allows 10K
% names as distributed).
hash_extra = 50000

% Max number of characters in all strings, including all error messages,
% help texts, font names, control sequences.  These values apply to TeX and MP.
pool_size = 1250000

% Minimum pool space after TeX/MP's own strings; must be at least
% 25000 less than pool_size, but doesn't need to be nearly that large.
string_vacancies = 90000
% Maximum number of strings.
max_strings.context = 150000
max_strings = 100000
% min pool space left after loading .fmt
pool_free = 47500

% Hyphenation trie. As distributed, the maximum is 65535; this should
% work unless `unsigned short' is not supported or is smaller than 16
% bits.  This value should suffice for UK English, US English, French,
% and German (for example).  To increase, you must change
% `ssup_trie_opcode' and `ssup_trie_size' in tex.ch (and rebuild TeX);
% the trie will then consume four bytes per entry, instead of two.
% 
% US English, German, and Portuguese: 30000.
% German: 14000.
% US English: 10000.
% 
trie_size = 300000

% Buffer size.  TeX uses the buffer to contain input lines, but macro
% expansion works by writing material into the buffer and reparsing the
% line.  As a consequence, certain constructs require the buffer to be
% very large.  As distributed, the size is 50000; most documents can be
% handled within a tenth of this size.
buf_size = 200000

hyph_size = 8191        % number of hyphenation exceptions, 610< and 65535>.
nest_size = 500		% simultaneous semantic levels (e.g., groups)
max_in_open = 15	% simultaneous input files and error insertions
param_size = 5000	% simultaneous macro parameters
save_size = 5000	% for saving values outside current group
stack_size = 3000	% simultaneous input sources

% These are Omega-specific.
ocp_buf_size = 40000	% character buffers for ocp filters.
ocp_stack_size = 10000	% stacks for ocp computations.
ocp_list_size = 1000	% control for multiple ocps.

% Parameter specific to MetaPost.
% Maximum number of knots between breakpoints of a path.
% Set to 2000 by default.
path_size.mpost = 10000
path_size.jmpost = 10000

% These are pdftex-specific.
dest_names_size = 300000
obj_tab_size = 300000
pdf_mem_size = 300000

% These work best if they are the same as the I/O buffer size, but it
% doesn't matter much.  Must be a multiple of 8.
dvi_buf_size = 16384 % TeX
gf_buf_size = 16384  % MF

% It's probably inadvisable to change these. At any rate, we must have:
% 45 < error_line      < 255;
% 30 < half_error_line < error_line - 15;
% 60 <= max_print_line;
% These apply to Metafont and MetaPost as well.
error_line = 79
half_error_line = 50
max_print_line = 79

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%% W32TeX specials %%%%%%%%%%%%%%%%%%%%%%%
%
% XeTeX variables
%
FONTCONFIG_FILE = fonts.conf
FONTCONFIG_PATH = $TEXMFMAIN/fonts/conf
FC_CACHEDIR = $TEXMFMAIN/fonts/cache
%
% vfontcap full path ( for dvipsv and dvi2ps)
VFONTCAP = $TEXMFMAIN/dvips/vfontcap
%
% used by dvipdfmx
%
CMAPINPUTS = $CMAPFONTS
%
%%
%% for mktexpk
%%
% -----------------------------------------
% MAKETEXPK_STYLE = dosnames
% -----------------------------------------
% MAKETEXPK_TOP_DIR = $VARTEXFONTS
% -----------------------------------------
% MAKETEXPK_MODE = canonex
% -----------------------------------------
%
% modes
%
MAKETEXPK_MODE_44 = fourfour
MAKETEXPK_MODE_70 = datadisc
MAKETEXPK_MODE_72 = mactrue
MAKETEXPK_MODE_78 = vs
MAKETEXPK_MODE_82 = decsmall
MAKETEXPK_MODE_83 = eighthre
MAKETEXPK_MODE_85 = sun
MAKETEXPK_MODE_91 = nineone
MAKETEXPK_MODE_95 = atarinf
MAKETEXPK_MODE_96 = atarins
MAKETEXPK_MODE_100 = amiga
MAKETEXPK_MODE_101 = atariotf
MAKETEXPK_MODE_110 = ibmvga
MAKETEXPK_MODE_118 = pcprevw
MAKETEXPK_MODE_120 = onetz
MAKETEXPK_MODE_144 = iw
MAKETEXPK_MODE_150 = ljlo
MAKETEXPK_MODE_160 = nectzo
MAKETEXPK_MODE_180 = lqlores
MAKETEXPK_MODE_200 = highfax
MAKETEXPK_MODE_240 = canonlbp
MAKETEXPK_MODE_300 = cx
MAKETEXPK_MODE_320 = neclm
MAKETEXPK_MODE_360 = bjtenex
MAKETEXPK_MODE_384 = dover
MAKETEXPK_MODE_400 = nexthi
MAKETEXPK_MODE_406 = agfafzz
MAKETEXPK_MODE_508 = ocessfz
MAKETEXPK_MODE_600 = canonex
MAKETEXPK_MODE_720 = esphi
MAKETEXPK_MODE_800 = lwpro
MAKETEXPK_MODE_1000 = lmaster
MAKETEXPK_MODE_1016 = apssixhi
MAKETEXPK_MODE_1200 = ultre
MAKETEXPK_MODE_1270 = linoone
MAKETEXPK_MODE_1800 = vtftzz
MAKETEXPK_MODE_2400 = supre
MAKETEXPK_MODE_2540 = linotzzh
MAKETEXPK_MODE_3386 = linolttz
MAKETEXPK_MODE_8000 = dpdfezzz
MAKETEXPK_MODE_9600 = ibx
%%-----------------------------------------

%%-----------------------------------------
% special variables for dvi2ps ( W32TeX )
% -----------------------------------------
DVI2PATH = $TEXMFMAIN/dvi2ps
DVI2LIB  = $DVI2PATH
DVI2FONTDESC = $DVI2LIB/fontdesc
%%-----------------------------------------

%%-----------------------------------------
% special variable for jdvi2kps ( W32TeX )
% -----------------------------------------
JDVIKPSHEADER = $TEXMFMAIN/jdvi2kps/jdvi2.ps
%%-----------------------------------------

%%-----------------------------------------
% Special variables for mktexpk ( W32TeX )
%%-----------------------------------------
%%
% name of the top directory of TeX
% ( usually not necessary to define )
%
%TeX_install_dir = c:/usr/local
%TeX_install_dir = d:/usr/local
%TeX_install_dir = e:/usr/local
%TeX_install_dir = f:/usr/local
%
%TeX_install_dir = c:/texk
%TeX_install_dir = d:/texk
%TeX_install_dir = e:/texk
%TeX_install_dir = f:/texk
%
%TeX_install_dir = c:/ptex
%TeX_install_dir = d:/ptex
%TeX_install_dir = e:/ptex
%TeX_install_dir = f:/ptex
%
%TeX_install_dir = c:/tex
%TeX_install_dir = d:/tex
%TeX_install_dir = e:/tex
%TeX_install_dir = f:/tex
%%%%% end of Win32 specials %%%%%
